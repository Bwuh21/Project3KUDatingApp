{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.isLoading = false;\n    this.errorMessage = '';\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email, this.kuEmailValidator]],\n      password: ['', Validators.required]\n    });\n  }\n  kuEmailValidator(control) {\n    const email = control.value;\n    if (email && !email.endsWith('@ku.edu')) {\n      return {\n        kuEmail: true\n      };\n    }\n    return null;\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.isLoading = true;\n      this.errorMessage = '';\n      this.authService.login(this.loginForm.value).subscribe({\n        next: response => {\n          this.isLoading = false;\n          this.router.navigate(['/matches']);\n        },\n        error: error => {\n          this.isLoading = false;\n          this.errorMessage = error.error?.message || 'Login failed. Please try again.';\n        }\n      });\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  template: `\n    <div class=\"auth-container\">\n      <div class=\"auth-card\">\n        <div class=\"auth-header\">\n          <h1>❤️ JayMatch</h1>\n          <p class=\"subtitle\">Welcome back, Jayhawk!</p>\n        </div>\n\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"auth-form\">\n          <div class=\"form-group\">\n            <label for=\"email\">KU Email</label>\n            <input \n              type=\"email\" \n              id=\"email\"\n              formControlName=\"email\"\n              placeholder=\"yourname@ku.edu\"\n              [class.error]=\"loginForm.get('email')?.invalid && loginForm.get('email')?.touched\"\n            >\n            <div class=\"error-message\" *ngIf=\"loginForm.get('email')?.invalid && loginForm.get('email')?.touched\">\n              <span *ngIf=\"loginForm.get('email')?.errors?.['required']\">Email is required</span>\n              <span *ngIf=\"loginForm.get('email')?.errors?.['email']\">Please enter a valid email</span>\n              <span *ngIf=\"loginForm.get('email')?.errors?.['kuEmail']\">Must be a KU email (@ku.edu)</span>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input \n              type=\"password\" \n              id=\"password\"\n              formControlName=\"password\"\n              placeholder=\"Enter your password\"\n              [class.error]=\"loginForm.get('password')?.invalid && loginForm.get('password')?.touched\"\n            >\n            <div class=\"error-message\" *ngIf=\"loginForm.get('password')?.invalid && loginForm.get('password')?.touched\">\n              Password is required\n            </div>\n          </div>\n\n          <button \n            type=\"submit\" \n            class=\"btn btn-primary full-width\"\n            [disabled]=\"loginForm.invalid || isLoading\"\n          >\n            <span *ngIf=\"!isLoading\">Sign In</span>\n            <span *ngIf=\"isLoading\">Signing In...</span>\n          </button>\n        </form>\n\n        <div class=\"auth-footer\">\n          <p>Don't have an account? <a routerLink=\"/register\">Sign up</a></p>\n        </div>\n\n        <div class=\"error-alert\" *ngIf=\"errorMessage\">\n          {{ errorMessage }}\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .auth-container {\n      min-height: 100vh;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 2rem;\n    }\n\n    .auth-card {\n      background: white;\n      border-radius: 20px;\n      padding: 3rem;\n      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\n      width: 100%;\n      max-width: 400px;\n    }\n\n    .auth-header {\n      text-align: center;\n      margin-bottom: 2rem;\n    }\n\n    .auth-header h1 {\n      color: #667eea;\n      font-size: 2.5rem;\n      margin-bottom: 0.5rem;\n    }\n\n    .subtitle {\n      color: #6c757d;\n      font-size: 1.1rem;\n    }\n\n    .auth-form {\n      margin-bottom: 2rem;\n    }\n\n    .full-width {\n      width: 100%;\n      margin-top: 1rem;\n    }\n\n    .auth-footer {\n      text-align: center;\n      color: #6c757d;\n    }\n\n    .auth-footer a {\n      color: #667eea;\n      text-decoration: none;\n      font-weight: 500;\n    }\n\n    .auth-footer a:hover {\n      text-decoration: underline;\n    }\n\n    .error-message {\n      color: #dc3545;\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n    }\n\n    .error-alert {\n      background: #f8d7da;\n      color: #721c24;\n      padding: 1rem;\n      border-radius: 8px;\n      margin-top: 1rem;\n      border: 1px solid #f5c6cb;\n    }\n\n    input.error {\n      border-color: #dc3545;\n    }\n\n    @media (max-width: 480px) {\n      .auth-card {\n        padding: 2rem;\n        margin: 1rem;\n      }\n    }\n  `]\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","Validators","LoginComponent","constructor","fb","authService","router","isLoading","errorMessage","loginForm","group","email","required","kuEmailValidator","password","control","value","endsWith","kuEmail","onSubmit","valid","login","subscribe","next","response","navigate","error","message","__decorate","selector","template","styles"],"sources":["C:\\Users\\super\\Project3KUDatingApp\\frontend\\src\\app\\modules\\auth\\components\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  template: `\r\n    <div class=\"auth-container\">\r\n      <div class=\"auth-card\">\r\n        <div class=\"auth-header\">\r\n          <h1>❤️ JayMatch</h1>\r\n          <p class=\"subtitle\">Welcome back, Jayhawk!</p>\r\n        </div>\r\n\r\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"auth-form\">\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">KU Email</label>\r\n            <input \r\n              type=\"email\" \r\n              id=\"email\"\r\n              formControlName=\"email\"\r\n              placeholder=\"yourname@ku.edu\"\r\n              [class.error]=\"loginForm.get('email')?.invalid && loginForm.get('email')?.touched\"\r\n            >\r\n            <div class=\"error-message\" *ngIf=\"loginForm.get('email')?.invalid && loginForm.get('email')?.touched\">\r\n              <span *ngIf=\"loginForm.get('email')?.errors?.['required']\">Email is required</span>\r\n              <span *ngIf=\"loginForm.get('email')?.errors?.['email']\">Please enter a valid email</span>\r\n              <span *ngIf=\"loginForm.get('email')?.errors?.['kuEmail']\">Must be a KU email (@ku.edu)</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"password\">Password</label>\r\n            <input \r\n              type=\"password\" \r\n              id=\"password\"\r\n              formControlName=\"password\"\r\n              placeholder=\"Enter your password\"\r\n              [class.error]=\"loginForm.get('password')?.invalid && loginForm.get('password')?.touched\"\r\n            >\r\n            <div class=\"error-message\" *ngIf=\"loginForm.get('password')?.invalid && loginForm.get('password')?.touched\">\r\n              Password is required\r\n            </div>\r\n          </div>\r\n\r\n          <button \r\n            type=\"submit\" \r\n            class=\"btn btn-primary full-width\"\r\n            [disabled]=\"loginForm.invalid || isLoading\"\r\n          >\r\n            <span *ngIf=\"!isLoading\">Sign In</span>\r\n            <span *ngIf=\"isLoading\">Signing In...</span>\r\n          </button>\r\n        </form>\r\n\r\n        <div class=\"auth-footer\">\r\n          <p>Don't have an account? <a routerLink=\"/register\">Sign up</a></p>\r\n        </div>\r\n\r\n        <div class=\"error-alert\" *ngIf=\"errorMessage\">\r\n          {{ errorMessage }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .auth-container {\r\n      min-height: 100vh;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      padding: 2rem;\r\n    }\r\n\r\n    .auth-card {\r\n      background: white;\r\n      border-radius: 20px;\r\n      padding: 3rem;\r\n      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\r\n      width: 100%;\r\n      max-width: 400px;\r\n    }\r\n\r\n    .auth-header {\r\n      text-align: center;\r\n      margin-bottom: 2rem;\r\n    }\r\n\r\n    .auth-header h1 {\r\n      color: #667eea;\r\n      font-size: 2.5rem;\r\n      margin-bottom: 0.5rem;\r\n    }\r\n\r\n    .subtitle {\r\n      color: #6c757d;\r\n      font-size: 1.1rem;\r\n    }\r\n\r\n    .auth-form {\r\n      margin-bottom: 2rem;\r\n    }\r\n\r\n    .full-width {\r\n      width: 100%;\r\n      margin-top: 1rem;\r\n    }\r\n\r\n    .auth-footer {\r\n      text-align: center;\r\n      color: #6c757d;\r\n    }\r\n\r\n    .auth-footer a {\r\n      color: #667eea;\r\n      text-decoration: none;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .auth-footer a:hover {\r\n      text-decoration: underline;\r\n    }\r\n\r\n    .error-message {\r\n      color: #dc3545;\r\n      font-size: 0.875rem;\r\n      margin-top: 0.25rem;\r\n    }\r\n\r\n    .error-alert {\r\n      background: #f8d7da;\r\n      color: #721c24;\r\n      padding: 1rem;\r\n      border-radius: 8px;\r\n      margin-top: 1rem;\r\n      border: 1px solid #f5c6cb;\r\n    }\r\n\r\n    input.error {\r\n      border-color: #dc3545;\r\n    }\r\n\r\n    @media (max-width: 480px) {\r\n      .auth-card {\r\n        padding: 2rem;\r\n        margin: 1rem;\r\n      }\r\n    }\r\n  `]\r\n})\r\nexport class LoginComponent {\r\n  loginForm: FormGroup;\r\n  isLoading = false;\r\n  errorMessage = '';\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email, this.kuEmailValidator]],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  kuEmailValidator(control: any) {\r\n    const email = control.value;\r\n    if (email && !email.endsWith('@ku.edu')) {\r\n      return { kuEmail: true };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.loginForm.valid) {\r\n      this.isLoading = true;\r\n      this.errorMessage = '';\r\n\r\n      this.authService.login(this.loginForm.value).subscribe({\r\n        next: (response) => {\r\n          this.isLoading = false;\r\n          this.router.navigate(['/matches']);\r\n        },\r\n        error: (error) => {\r\n          this.isLoading = false;\r\n          this.errorMessage = error.error?.message || 'Login failed. Please try again.';\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAsJ5D,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAKzBC,YACUC,EAAe,EACfC,WAAwB,EACxBC,MAAc;IAFd,KAAAF,EAAE,GAAFA,EAAE;IACF,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IANhB,KAAAC,SAAS,GAAG,KAAK;IACjB,KAAAC,YAAY,GAAG,EAAE;IAOf,IAAI,CAACC,SAAS,GAAG,IAAI,CAACL,EAAE,CAACM,KAAK,CAAC;MAC7BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACU,KAAK,EAAE,IAAI,CAACE,gBAAgB,CAAC,CAAC;MAC3EC,QAAQ,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACW,QAAQ;KACnC,CAAC;EACJ;EAEAC,gBAAgBA,CAACE,OAAY;IAC3B,MAAMJ,KAAK,GAAGI,OAAO,CAACC,KAAK;IAC3B,IAAIL,KAAK,IAAI,CAACA,KAAK,CAACM,QAAQ,CAAC,SAAS,CAAC,EAAE;MACvC,OAAO;QAAEC,OAAO,EAAE;MAAI,CAAE;;IAE1B,OAAO,IAAI;EACb;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACV,SAAS,CAACW,KAAK,EAAE;MACxB,IAAI,CAACb,SAAS,GAAG,IAAI;MACrB,IAAI,CAACC,YAAY,GAAG,EAAE;MAEtB,IAAI,CAACH,WAAW,CAACgB,KAAK,CAAC,IAAI,CAACZ,SAAS,CAACO,KAAK,CAAC,CAACM,SAAS,CAAC;QACrDC,IAAI,EAAGC,QAAQ,IAAI;UACjB,IAAI,CAACjB,SAAS,GAAG,KAAK;UACtB,IAAI,CAACD,MAAM,CAACmB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;QACpC,CAAC;QACDC,KAAK,EAAGA,KAAK,IAAI;UACf,IAAI,CAACnB,SAAS,GAAG,KAAK;UACtB,IAAI,CAACC,YAAY,GAAGkB,KAAK,CAACA,KAAK,EAAEC,OAAO,IAAI,iCAAiC;QAC/E;OACD,CAAC;;EAEN;CACD;AAzCYzB,cAAc,GAAA0B,UAAA,EAlJ1B5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,WAAW;EACrBC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA0DT;EACDC,MAAM,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmFR;CACF,CAAC,C,EACW7B,cAAc,CAyC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}