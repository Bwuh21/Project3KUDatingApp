{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../../../services/chat.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction ChatWindowComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Online\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChatWindowComponent_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"Last seen \", ctx_r1.lastSeen, \"\");\n  }\n}\nfunction ChatWindowComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18)(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 19);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const message_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"sent\", ctx_r1.isSentByCurrentUser(message_r3))(\"received\", !ctx_r1.isSentByCurrentUser(message_r3));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(message_r3.content);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.formatMessageTime(message_r3.timestamp));\n  }\n}\nfunction ChatWindowComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Send\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChatWindowComponent_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Sending...\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ChatWindowComponent {\n  constructor(route, router, chatService, fb) {\n    this.route = route;\n    this.router = router;\n    this.chatService = chatService;\n    this.fb = fb;\n    this.messages = [];\n    this.participantName = '';\n    this.participantImage = '';\n    this.isOnline = false;\n    this.lastSeen = '';\n    this.isLoading = false;\n    this.messageForm = this.fb.group({\n      content: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.chatId = +this.route.snapshot.paramMap.get('id');\n    this.loadChatData();\n    this.loadMessages();\n    this.connectToWebSocket();\n  }\n  ngOnDestroy() {\n    this.chatService.disconnect();\n    if (this.messagesSubscription) {\n      this.messagesSubscription.unsubscribe();\n    }\n  }\n  loadChatData() {\n    // Mock chat data - Diana Heart as default chatter\n    if (this.chatId === 1) {\n      this.participantName = 'Diana Heart';\n      this.participantImage = 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=100';\n      this.isOnline = true;\n      this.lastSeen = 'Online now';\n    } else {\n      this.participantName = 'Alex Johnson';\n      this.participantImage = 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=100';\n      this.isOnline = Math.random() > 0.5;\n      this.lastSeen = '2 hours ago';\n    }\n  }\n  loadMessages() {\n    // Mock messages for Diana Heart\n    if (this.chatId === 1) {\n      this.messages = [{\n        id: 1,\n        senderId: 2,\n        receiverId: 1,\n        content: 'Hey! Welcome to JayMatch! I\\'m Diana Heart, your personal matchmaking assistant 💜',\n        timestamp: new Date(Date.now() - 3600000),\n        isRead: true\n      }, {\n        id: 2,\n        senderId: 2,\n        receiverId: 1,\n        content: 'I\\'m here to help you find your perfect KU match! How\\'s your day going?',\n        timestamp: new Date(Date.now() - 1800000),\n        isRead: true\n      }, {\n        id: 3,\n        senderId: 2,\n        receiverId: 1,\n        content: 'Ready to start swiping? I\\'ve got some amazing profiles lined up for you! 🚀',\n        timestamp: new Date(),\n        isRead: false\n      }];\n    } else {\n      this.messages = [{\n        id: 1,\n        senderId: 2,\n        receiverId: 1,\n        content: 'Hey! How\\'s your day going?',\n        timestamp: new Date(Date.now() - 3600000),\n        isRead: true\n      }, {\n        id: 2,\n        senderId: 1,\n        receiverId: 2,\n        content: 'Great! Just finished my CS homework. How about you?',\n        timestamp: new Date(Date.now() - 1800000),\n        isRead: true\n      }];\n    }\n    this.scrollToBottom();\n  }\n  connectToWebSocket() {\n    this.chatService.connectToChat(this.chatId);\n    this.messagesSubscription = this.chatService.messages$.subscribe(messages => {\n      this.messages = messages;\n      this.scrollToBottom();\n    });\n  }\n  sendMessage() {\n    if (this.messageForm.valid) {\n      const content = this.messageForm.value.content;\n      this.isLoading = true;\n      this.chatService.sendMessage(this.chatId, content).subscribe({\n        next: message => {\n          this.messages.push(message);\n          this.messageForm.reset();\n          this.isLoading = false;\n          this.scrollToBottom();\n        },\n        error: error => {\n          console.error('Error sending message:', error);\n          this.isLoading = false;\n        }\n      });\n    }\n  }\n  isSentByCurrentUser(message) {\n    // Mock - in real app, compare with current user ID\n    return Math.random() > 0.5;\n  }\n  formatMessageTime(timestamp) {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  }\n  scrollToBottom() {\n    // Scroll to bottom of messages container\n    setTimeout(() => {\n      const container = document.querySelector('.chat-messages');\n      if (container) {\n        container.scrollTop = container.scrollHeight;\n      }\n    }, 100);\n  }\n  goBack() {\n    this.router.navigate(['/chat']);\n  }\n  static {\n    this.ɵfac = function ChatWindowComponent_Factory(t) {\n      return new (t || ChatWindowComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ChatService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChatWindowComponent,\n      selectors: [[\"app-chat-window\"]],\n      decls: 19,\n      vars: 10,\n      consts: [[\"messagesContainer\", \"\"], [1, \"chat-window-container\"], [1, \"chat-header\"], [1, \"back-btn\", 3, \"click\"], [1, \"chat-info\"], [1, \"participant-avatar\", 3, \"src\", \"alt\"], [1, \"participant-details\"], [\"class\", \"online-status\", 4, \"ngIf\"], [\"class\", \"online-status offline\", 4, \"ngIf\"], [1, \"chat-messages\"], [\"class\", \"message\", 3, \"sent\", \"received\", 4, \"ngFor\", \"ngForOf\"], [1, \"chat-input\", 3, \"ngSubmit\", \"formGroup\"], [\"type\", \"text\", \"formControlName\", \"content\", \"placeholder\", \"Type a message...\", 1, \"message-input\"], [\"type\", \"submit\", 1, \"send-btn\", 3, \"disabled\"], [4, \"ngIf\"], [1, \"online-status\"], [1, \"online-status\", \"offline\"], [1, \"message\"], [1, \"message-content\"], [1, \"message-time\"]],\n      template: function ChatWindowComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function ChatWindowComponent_Template_button_click_2_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.goBack());\n          });\n          i0.ɵɵtext(3, \" \\u2190 Back \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 4);\n          i0.ɵɵelement(5, \"img\", 5);\n          i0.ɵɵelementStart(6, \"div\", 6)(7, \"h3\");\n          i0.ɵɵtext(8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(9, ChatWindowComponent_span_9_Template, 2, 0, \"span\", 7)(10, ChatWindowComponent_span_10_Template, 2, 1, \"span\", 8);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(11, \"div\", 9, 0);\n          i0.ɵɵtemplate(13, ChatWindowComponent_div_13_Template, 6, 6, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"form\", 11);\n          i0.ɵɵlistener(\"ngSubmit\", function ChatWindowComponent_Template_form_ngSubmit_14_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.sendMessage());\n          });\n          i0.ɵɵelement(15, \"input\", 12);\n          i0.ɵɵelementStart(16, \"button\", 13);\n          i0.ɵɵtemplate(17, ChatWindowComponent_span_17_Template, 2, 0, \"span\", 14)(18, ChatWindowComponent_span_18_Template, 2, 0, \"span\", 14);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"src\", ctx.participantImage, i0.ɵɵsanitizeUrl)(\"alt\", ctx.participantName);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.participantName);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isOnline);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.isOnline);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"formGroup\", ctx.messageForm);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.messageForm.invalid || ctx.isLoading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        }\n      },\n      dependencies: [i4.NgForOf, i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n      styles: [\".chat-window-container[_ngcontent-%COMP%] {\\n  max-width: 800px;\\n  margin: 0 auto;\\n  height: calc(100vh - 120px);\\n  display: flex;\\n  flex-direction: column;\\n  background: white;\\n  border-radius: 20px;\\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\\n  overflow: hidden;\\n}\\n\\n.chat-header[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  padding: 1rem 1.5rem;\\n  background: linear-gradient(135deg, #667eea, #764ba2);\\n  color: white;\\n}\\n\\n.back-btn[_ngcontent-%COMP%] {\\n  background: rgba(255, 255, 255, 0.2);\\n  color: white;\\n  border: none;\\n  padding: 0.5rem 1rem;\\n  border-radius: 8px;\\n  cursor: pointer;\\n  margin-right: 1rem;\\n  transition: background-color 0.3s ease;\\n}\\n\\n.back-btn[_ngcontent-%COMP%]:hover {\\n  background: rgba(255, 255, 255, 0.3);\\n}\\n\\n.chat-info[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  flex: 1;\\n}\\n\\n.participant-avatar[_ngcontent-%COMP%] {\\n  width: 50px;\\n  height: 50px;\\n  border-radius: 50%;\\n  object-fit: cover;\\n  margin-right: 1rem;\\n}\\n\\n.participant-details[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  margin: 0;\\n  font-size: 1.2rem;\\n}\\n\\n.online-status[_ngcontent-%COMP%] {\\n  font-size: 0.8rem;\\n  opacity: 0.8;\\n}\\n\\n.online-status.offline[_ngcontent-%COMP%] {\\n  opacity: 0.6;\\n}\\n\\n.chat-messages[_ngcontent-%COMP%] {\\n  flex: 1;\\n  padding: 1rem;\\n  overflow-y: auto;\\n  background: #f8f9fa;\\n}\\n\\n.message[_ngcontent-%COMP%] {\\n  margin-bottom: 1rem;\\n  display: flex;\\n}\\n\\n.message.sent[_ngcontent-%COMP%] {\\n  justify-content: flex-end;\\n}\\n\\n.message.received[_ngcontent-%COMP%] {\\n  justify-content: flex-start;\\n}\\n\\n.message-content[_ngcontent-%COMP%] {\\n  max-width: 70%;\\n  padding: 0.75rem 1rem;\\n  border-radius: 18px;\\n  position: relative;\\n}\\n\\n.message.sent[_ngcontent-%COMP%]   .message-content[_ngcontent-%COMP%] {\\n  background: linear-gradient(135deg, #667eea, #764ba2);\\n  color: white;\\n}\\n\\n.message.received[_ngcontent-%COMP%]   .message-content[_ngcontent-%COMP%] {\\n  background: white;\\n  color: #333;\\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\\n}\\n\\n.message-content[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  margin: 0;\\n  line-height: 1.4;\\n}\\n\\n.message-time[_ngcontent-%COMP%] {\\n  font-size: 0.7rem;\\n  opacity: 0.7;\\n  display: block;\\n  margin-top: 0.25rem;\\n}\\n\\n.chat-input[_ngcontent-%COMP%] {\\n  display: flex;\\n  padding: 1rem 1.5rem;\\n  background: white;\\n  border-top: 1px solid #e9ecef;\\n}\\n\\n.message-input[_ngcontent-%COMP%] {\\n  flex: 1;\\n  padding: 0.75rem 1rem;\\n  border: 2px solid #e9ecef;\\n  border-radius: 25px;\\n  font-size: 1rem;\\n  outline: none;\\n  transition: border-color 0.3s ease;\\n}\\n\\n.message-input[_ngcontent-%COMP%]:focus {\\n  border-color: #667eea;\\n}\\n\\n.send-btn[_ngcontent-%COMP%] {\\n  margin-left: 1rem;\\n  padding: 0.75rem 1.5rem;\\n  background: linear-gradient(135deg, #667eea, #764ba2);\\n  color: white;\\n  border: none;\\n  border-radius: 25px;\\n  cursor: pointer;\\n  font-weight: 600;\\n  transition: all 0.3s ease;\\n}\\n\\n.send-btn[_ngcontent-%COMP%]:hover:not(:disabled) {\\n  transform: translateY(-2px);\\n  box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);\\n}\\n\\n.send-btn[_ngcontent-%COMP%]:disabled {\\n  opacity: 0.6;\\n  cursor: not-allowed;\\n}\\n\\n@media (max-width: 768px) {\\n  .chat-window-container[_ngcontent-%COMP%] {\\n    height: calc(100vh - 80px);\\n    border-radius: 0;\\n  }\\n  .message-content[_ngcontent-%COMP%] {\\n    max-width: 85%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9jaGF0L2NvbXBvbmVudHMvY2hhdC13aW5kb3cvY2hhdC13aW5kb3cuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0UsZ0JBQUE7RUFDQSxjQUFBO0VBQ0EsMkJBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxpQkFBQTtFQUNBLG1CQUFBO0VBQ0EsMENBQUE7RUFDQSxnQkFBQTtBQUFOOztBQUdJO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0Esb0JBQUE7RUFDQSxxREFBQTtFQUNBLFlBQUE7QUFBTjs7QUFHSTtFQUNFLG9DQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7RUFDQSxvQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0VBQ0Esc0NBQUE7QUFBTjs7QUFHSTtFQUNFLG9DQUFBO0FBQU47O0FBR0k7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxPQUFBO0FBQU47O0FBR0k7RUFDRSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtBQUFOOztBQUdJO0VBQ0UsU0FBQTtFQUNBLGlCQUFBO0FBQU47O0FBR0k7RUFDRSxpQkFBQTtFQUNBLFlBQUE7QUFBTjs7QUFHSTtFQUNFLFlBQUE7QUFBTjs7QUFHSTtFQUNFLE9BQUE7RUFDQSxhQUFBO0VBQ0EsZ0JBQUE7RUFDQSxtQkFBQTtBQUFOOztBQUdJO0VBQ0UsbUJBQUE7RUFDQSxhQUFBO0FBQU47O0FBR0k7RUFDRSx5QkFBQTtBQUFOOztBQUdJO0VBQ0UsMkJBQUE7QUFBTjs7QUFHSTtFQUNFLGNBQUE7RUFDQSxxQkFBQTtFQUNBLG1CQUFBO0VBQ0Esa0JBQUE7QUFBTjs7QUFHSTtFQUNFLHFEQUFBO0VBQ0EsWUFBQTtBQUFOOztBQUdJO0VBQ0UsaUJBQUE7RUFDQSxXQUFBO0VBQ0Esd0NBQUE7QUFBTjs7QUFHSTtFQUNFLFNBQUE7RUFDQSxnQkFBQTtBQUFOOztBQUdJO0VBQ0UsaUJBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtFQUNBLG1CQUFBO0FBQU47O0FBR0k7RUFDRSxhQUFBO0VBQ0Esb0JBQUE7RUFDQSxpQkFBQTtFQUNBLDZCQUFBO0FBQU47O0FBR0k7RUFDRSxPQUFBO0VBQ0EscUJBQUE7RUFDQSx5QkFBQTtFQUNBLG1CQUFBO0VBQ0EsZUFBQTtFQUNBLGFBQUE7RUFDQSxrQ0FBQTtBQUFOOztBQUdJO0VBQ0UscUJBQUE7QUFBTjs7QUFHSTtFQUNFLGlCQUFBO0VBQ0EsdUJBQUE7RUFDQSxxREFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSx5QkFBQTtBQUFOOztBQUdJO0VBQ0UsMkJBQUE7RUFDQSwrQ0FBQTtBQUFOOztBQUdJO0VBQ0UsWUFBQTtFQUNBLG1CQUFBO0FBQU47O0FBR0k7RUFDRTtJQUNFLDBCQUFBO0lBQ0EsZ0JBQUE7RUFBTjtFQUdJO0lBQ0UsY0FBQTtFQUROO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAuY2hhdC13aW5kb3ctY29udGFpbmVyIHtcbiAgICAgIG1heC13aWR0aDogODAwcHg7XG4gICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDEyMHB4KTtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICAgICAgYm94LXNoYWRvdzogMCAxMHB4IDMwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB9XG5cbiAgICAuY2hhdC1oZWFkZXIge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBwYWRkaW5nOiAxcmVtIDEuNXJlbTtcbiAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsICM2NjdlZWEsICM3NjRiYTIpO1xuICAgICAgY29sb3I6IHdoaXRlO1xuICAgIH1cblxuICAgIC5iYWNrLWJ0biB7XG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMik7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICBwYWRkaW5nOiAwLjVyZW0gMXJlbTtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIG1hcmdpbi1yaWdodDogMXJlbTtcbiAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlO1xuICAgIH1cblxuICAgIC5iYWNrLWJ0bjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMyk7XG4gICAgfVxuXG4gICAgLmNoYXQtaW5mbyB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGZsZXg6IDE7XG4gICAgfVxuXG4gICAgLnBhcnRpY2lwYW50LWF2YXRhciB7XG4gICAgICB3aWR0aDogNTBweDtcbiAgICAgIGhlaWdodDogNTBweDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xuICAgIH1cblxuICAgIC5wYXJ0aWNpcGFudC1kZXRhaWxzIGgzIHtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgIH1cblxuICAgIC5vbmxpbmUtc3RhdHVzIHtcbiAgICAgIGZvbnQtc2l6ZTogMC44cmVtO1xuICAgICAgb3BhY2l0eTogMC44O1xuICAgIH1cblxuICAgIC5vbmxpbmUtc3RhdHVzLm9mZmxpbmUge1xuICAgICAgb3BhY2l0eTogMC42O1xuICAgIH1cblxuICAgIC5jaGF0LW1lc3NhZ2VzIHtcbiAgICAgIGZsZXg6IDE7XG4gICAgICBwYWRkaW5nOiAxcmVtO1xuICAgICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICAgIGJhY2tncm91bmQ6ICNmOGY5ZmE7XG4gICAgfVxuXG4gICAgLm1lc3NhZ2Uge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgfVxuXG4gICAgLm1lc3NhZ2Uuc2VudCB7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgIH1cblxuICAgIC5tZXNzYWdlLnJlY2VpdmVkIHtcbiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICB9XG5cbiAgICAubWVzc2FnZS1jb250ZW50IHtcbiAgICAgIG1heC13aWR0aDogNzAlO1xuICAgICAgcGFkZGluZzogMC43NXJlbSAxcmVtO1xuICAgICAgYm9yZGVyLXJhZGl1czogMThweDtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB9XG5cbiAgICAubWVzc2FnZS5zZW50IC5tZXNzYWdlLWNvbnRlbnQge1xuICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzY2N2VlYSwgIzc2NGJhMik7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgfVxuXG4gICAgLm1lc3NhZ2UucmVjZWl2ZWQgLm1lc3NhZ2UtY29udGVudCB7XG4gICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgIGNvbG9yOiAjMzMzO1xuICAgICAgYm94LXNoYWRvdzogMCAycHggNXB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgICB9XG5cbiAgICAubWVzc2FnZS1jb250ZW50IHAge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgbGluZS1oZWlnaHQ6IDEuNDtcbiAgICB9XG5cbiAgICAubWVzc2FnZS10aW1lIHtcbiAgICAgIGZvbnQtc2l6ZTogMC43cmVtO1xuICAgICAgb3BhY2l0eTogMC43O1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBtYXJnaW4tdG9wOiAwLjI1cmVtO1xuICAgIH1cblxuICAgIC5jaGF0LWlucHV0IHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBwYWRkaW5nOiAxcmVtIDEuNXJlbTtcbiAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlOWVjZWY7XG4gICAgfVxuXG4gICAgLm1lc3NhZ2UtaW5wdXQge1xuICAgICAgZmxleDogMTtcbiAgICAgIHBhZGRpbmc6IDAuNzVyZW0gMXJlbTtcbiAgICAgIGJvcmRlcjogMnB4IHNvbGlkICNlOWVjZWY7XG4gICAgICBib3JkZXItcmFkaXVzOiAyNXB4O1xuICAgICAgZm9udC1zaXplOiAxcmVtO1xuICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgIHRyYW5zaXRpb246IGJvcmRlci1jb2xvciAwLjNzIGVhc2U7XG4gICAgfVxuXG4gICAgLm1lc3NhZ2UtaW5wdXQ6Zm9jdXMge1xuICAgICAgYm9yZGVyLWNvbG9yOiAjNjY3ZWVhO1xuICAgIH1cblxuICAgIC5zZW5kLWJ0biB7XG4gICAgICBtYXJnaW4tbGVmdDogMXJlbTtcbiAgICAgIHBhZGRpbmc6IDAuNzVyZW0gMS41cmVtO1xuICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzY2N2VlYSwgIzc2NGJhMik7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICBib3JkZXItcmFkaXVzOiAyNXB4O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gICAgfVxuXG4gICAgLnNlbmQtYnRuOmhvdmVyOm5vdCg6ZGlzYWJsZWQpIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMnB4KTtcbiAgICAgIGJveC1zaGFkb3c6IDAgNXB4IDE1cHggcmdiYSgxMDIsIDEyNiwgMjM0LCAwLjMpO1xuICAgIH1cblxuICAgIC5zZW5kLWJ0bjpkaXNhYmxlZCB7XG4gICAgICBvcGFjaXR5OiAwLjY7XG4gICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLmNoYXQtd2luZG93LWNvbnRhaW5lciB7XG4gICAgICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDgwcHgpO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgICAgfVxuICAgICAgXG4gICAgICAubWVzc2FnZS1jb250ZW50IHtcbiAgICAgICAgbWF4LXdpZHRoOiA4NSU7XG4gICAgICB9XG4gICAgfVxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","lastSeen","ɵɵclassProp","isSentByCurrentUser","message_r3","ɵɵtextInterpolate","content","formatMessageTime","timestamp","ChatWindowComponent","constructor","route","router","chatService","fb","messages","participantName","participantImage","isOnline","isLoading","messageForm","group","required","ngOnInit","chatId","snapshot","paramMap","get","loadChatData","loadMessages","connectToWebSocket","ngOnDestroy","disconnect","messagesSubscription","unsubscribe","Math","random","id","senderId","receiverId","Date","now","isRead","scrollToBottom","connectToChat","messages$","subscribe","sendMessage","valid","value","next","message","push","reset","error","console","date","toLocaleTimeString","hour","minute","setTimeout","container","document","querySelector","scrollTop","scrollHeight","goBack","navigate","ɵɵdirectiveInject","i1","ActivatedRoute","Router","i2","ChatService","i3","FormBuilder","selectors","decls","vars","consts","template","ChatWindowComponent_Template","rf","ctx","ɵɵlistener","ChatWindowComponent_Template_button_click_2_listener","ɵɵrestoreView","_r1","ɵɵresetView","ɵɵelement","ɵɵtemplate","ChatWindowComponent_span_9_Template","ChatWindowComponent_span_10_Template","ChatWindowComponent_div_13_Template","ChatWindowComponent_Template_form_ngSubmit_14_listener","ChatWindowComponent_span_17_Template","ChatWindowComponent_span_18_Template","ɵɵproperty","ɵɵsanitizeUrl","invalid"],"sources":["C:\\Users\\super\\Project3KUDatingApp\\frontend\\src\\app\\modules\\chat\\components\\chat-window\\chat-window.component.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ChatService, Message, Chat } from '../../../../services/chat.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-chat-window',\r\n  template: `\r\n    <div class=\"chat-window-container\">\r\n      <div class=\"chat-header\">\r\n        <button class=\"back-btn\" (click)=\"goBack()\">\r\n          ← Back\r\n        </button>\r\n        <div class=\"chat-info\">\r\n          <img \r\n            [src]=\"participantImage\" \r\n            [alt]=\"participantName\"\r\n            class=\"participant-avatar\"\r\n          >\r\n          <div class=\"participant-details\">\r\n            <h3>{{ participantName }}</h3>\r\n            <span class=\"online-status\" *ngIf=\"isOnline\">Online</span>\r\n            <span class=\"online-status offline\" *ngIf=\"!isOnline\">Last seen {{ lastSeen }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"chat-messages\" #messagesContainer>\r\n        <div \r\n          *ngFor=\"let message of messages\" \r\n          class=\"message\"\r\n          [class.sent]=\"isSentByCurrentUser(message)\"\r\n          [class.received]=\"!isSentByCurrentUser(message)\"\r\n        >\r\n          <div class=\"message-content\">\r\n            <p>{{ message.content }}</p>\r\n            <span class=\"message-time\">{{ formatMessageTime(message.timestamp) }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <form [formGroup]=\"messageForm\" (ngSubmit)=\"sendMessage()\" class=\"chat-input\">\r\n        <input \r\n          type=\"text\" \r\n          formControlName=\"content\"\r\n          placeholder=\"Type a message...\"\r\n          class=\"message-input\"\r\n        >\r\n        <button \r\n          type=\"submit\" \r\n          class=\"send-btn\"\r\n          [disabled]=\"messageForm.invalid || isLoading\"\r\n        >\r\n          <span *ngIf=\"!isLoading\">Send</span>\r\n          <span *ngIf=\"isLoading\">Sending...</span>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .chat-window-container {\r\n      max-width: 800px;\r\n      margin: 0 auto;\r\n      height: calc(100vh - 120px);\r\n      display: flex;\r\n      flex-direction: column;\r\n      background: white;\r\n      border-radius: 20px;\r\n      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\r\n      overflow: hidden;\r\n    }\r\n\r\n    .chat-header {\r\n      display: flex;\r\n      align-items: center;\r\n      padding: 1rem 1.5rem;\r\n      background: linear-gradient(135deg, #667eea, #764ba2);\r\n      color: white;\r\n    }\r\n\r\n    .back-btn {\r\n      background: rgba(255, 255, 255, 0.2);\r\n      color: white;\r\n      border: none;\r\n      padding: 0.5rem 1rem;\r\n      border-radius: 8px;\r\n      cursor: pointer;\r\n      margin-right: 1rem;\r\n      transition: background-color 0.3s ease;\r\n    }\r\n\r\n    .back-btn:hover {\r\n      background: rgba(255, 255, 255, 0.3);\r\n    }\r\n\r\n    .chat-info {\r\n      display: flex;\r\n      align-items: center;\r\n      flex: 1;\r\n    }\r\n\r\n    .participant-avatar {\r\n      width: 50px;\r\n      height: 50px;\r\n      border-radius: 50%;\r\n      object-fit: cover;\r\n      margin-right: 1rem;\r\n    }\r\n\r\n    .participant-details h3 {\r\n      margin: 0;\r\n      font-size: 1.2rem;\r\n    }\r\n\r\n    .online-status {\r\n      font-size: 0.8rem;\r\n      opacity: 0.8;\r\n    }\r\n\r\n    .online-status.offline {\r\n      opacity: 0.6;\r\n    }\r\n\r\n    .chat-messages {\r\n      flex: 1;\r\n      padding: 1rem;\r\n      overflow-y: auto;\r\n      background: #f8f9fa;\r\n    }\r\n\r\n    .message {\r\n      margin-bottom: 1rem;\r\n      display: flex;\r\n    }\r\n\r\n    .message.sent {\r\n      justify-content: flex-end;\r\n    }\r\n\r\n    .message.received {\r\n      justify-content: flex-start;\r\n    }\r\n\r\n    .message-content {\r\n      max-width: 70%;\r\n      padding: 0.75rem 1rem;\r\n      border-radius: 18px;\r\n      position: relative;\r\n    }\r\n\r\n    .message.sent .message-content {\r\n      background: linear-gradient(135deg, #667eea, #764ba2);\r\n      color: white;\r\n    }\r\n\r\n    .message.received .message-content {\r\n      background: white;\r\n      color: #333;\r\n      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n    }\r\n\r\n    .message-content p {\r\n      margin: 0;\r\n      line-height: 1.4;\r\n    }\r\n\r\n    .message-time {\r\n      font-size: 0.7rem;\r\n      opacity: 0.7;\r\n      display: block;\r\n      margin-top: 0.25rem;\r\n    }\r\n\r\n    .chat-input {\r\n      display: flex;\r\n      padding: 1rem 1.5rem;\r\n      background: white;\r\n      border-top: 1px solid #e9ecef;\r\n    }\r\n\r\n    .message-input {\r\n      flex: 1;\r\n      padding: 0.75rem 1rem;\r\n      border: 2px solid #e9ecef;\r\n      border-radius: 25px;\r\n      font-size: 1rem;\r\n      outline: none;\r\n      transition: border-color 0.3s ease;\r\n    }\r\n\r\n    .message-input:focus {\r\n      border-color: #667eea;\r\n    }\r\n\r\n    .send-btn {\r\n      margin-left: 1rem;\r\n      padding: 0.75rem 1.5rem;\r\n      background: linear-gradient(135deg, #667eea, #764ba2);\r\n      color: white;\r\n      border: none;\r\n      border-radius: 25px;\r\n      cursor: pointer;\r\n      font-weight: 600;\r\n      transition: all 0.3s ease;\r\n    }\r\n\r\n    .send-btn:hover:not(:disabled) {\r\n      transform: translateY(-2px);\r\n      box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);\r\n    }\r\n\r\n    .send-btn:disabled {\r\n      opacity: 0.6;\r\n      cursor: not-allowed;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      .chat-window-container {\r\n        height: calc(100vh - 80px);\r\n        border-radius: 0;\r\n      }\r\n      \r\n      .message-content {\r\n        max-width: 85%;\r\n      }\r\n    }\r\n  `]\r\n})\r\nexport class ChatWindowComponent implements OnInit, OnDestroy {\r\n  chatId!: number;\r\n  messages: Message[] = [];\r\n  participantName = '';\r\n  participantImage = '';\r\n  isOnline = false;\r\n  lastSeen = '';\r\n  isLoading = false;\r\n  \r\n  messageForm: FormGroup;\r\n  private messagesSubscription?: Subscription;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private chatService: ChatService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    this.messageForm = this.fb.group({\r\n      content: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.chatId = +this.route.snapshot.paramMap.get('id')!;\r\n    this.loadChatData();\r\n    this.loadMessages();\r\n    this.connectToWebSocket();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.chatService.disconnect();\r\n    if (this.messagesSubscription) {\r\n      this.messagesSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  loadChatData() {\r\n    // Mock chat data - Diana Heart as default chatter\r\n    if (this.chatId === 1) {\r\n      this.participantName = 'Diana Heart';\r\n      this.participantImage = 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=100';\r\n      this.isOnline = true;\r\n      this.lastSeen = 'Online now';\r\n    } else {\r\n      this.participantName = 'Alex Johnson';\r\n      this.participantImage = 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=100';\r\n      this.isOnline = Math.random() > 0.5;\r\n      this.lastSeen = '2 hours ago';\r\n    }\r\n  }\r\n\r\n  loadMessages() {\r\n    // Mock messages for Diana Heart\r\n    if (this.chatId === 1) {\r\n      this.messages = [\r\n        {\r\n          id: 1,\r\n          senderId: 2,\r\n          receiverId: 1,\r\n          content: 'Hey! Welcome to JayMatch! I\\'m Diana Heart, your personal matchmaking assistant 💜',\r\n          timestamp: new Date(Date.now() - 3600000),\r\n          isRead: true\r\n        },\r\n        {\r\n          id: 2,\r\n          senderId: 2,\r\n          receiverId: 1,\r\n          content: 'I\\'m here to help you find your perfect KU match! How\\'s your day going?',\r\n          timestamp: new Date(Date.now() - 1800000),\r\n          isRead: true\r\n        },\r\n        {\r\n          id: 3,\r\n          senderId: 2,\r\n          receiverId: 1,\r\n          content: 'Ready to start swiping? I\\'ve got some amazing profiles lined up for you! 🚀',\r\n          timestamp: new Date(),\r\n          isRead: false\r\n        }\r\n      ];\r\n    } else {\r\n      this.messages = [\r\n        {\r\n          id: 1,\r\n          senderId: 2,\r\n          receiverId: 1,\r\n          content: 'Hey! How\\'s your day going?',\r\n          timestamp: new Date(Date.now() - 3600000),\r\n          isRead: true\r\n        },\r\n        {\r\n          id: 2,\r\n          senderId: 1,\r\n          receiverId: 2,\r\n          content: 'Great! Just finished my CS homework. How about you?',\r\n          timestamp: new Date(Date.now() - 1800000),\r\n          isRead: true\r\n        }\r\n      ];\r\n    }\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  connectToWebSocket() {\r\n    this.chatService.connectToChat(this.chatId);\r\n    \r\n    this.messagesSubscription = this.chatService.messages$.subscribe((messages: any) => {\r\n      this.messages = messages;\r\n      this.scrollToBottom();\r\n    });\r\n  }\r\n\r\n  sendMessage() {\r\n    if (this.messageForm.valid) {\r\n      const content = this.messageForm.value.content;\r\n      this.isLoading = true;\r\n\r\n      this.chatService.sendMessage(this.chatId, content).subscribe({\r\n        next: (message: any) => {\r\n          this.messages.push(message);\r\n          this.messageForm.reset();\r\n          this.isLoading = false;\r\n          this.scrollToBottom();\r\n        },\r\n        error: (error: any) => {\r\n          console.error('Error sending message:', error);\r\n          this.isLoading = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  isSentByCurrentUser(message: Message): boolean {\r\n    // Mock - in real app, compare with current user ID\r\n    return Math.random() > 0.5;\r\n  }\r\n\r\n  formatMessageTime(timestamp: Date): string {\r\n    const date = new Date(timestamp);\r\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  }\r\n\r\n  scrollToBottom() {\r\n    // Scroll to bottom of messages container\r\n    setTimeout(() => {\r\n      const container = document.querySelector('.chat-messages');\r\n      if (container) {\r\n        container.scrollTop = container.scrollHeight;\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/chat']);\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;IAoBvDC,EAAA,CAAAC,cAAA,eAA6C;IAAAD,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAC1DH,EAAA,CAAAC,cAAA,eAAsD;IAAAD,EAAA,CAAAE,MAAA,GAAwB;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;IAA/BH,EAAA,CAAAI,SAAA,EAAwB;IAAxBJ,EAAA,CAAAK,kBAAA,eAAAC,MAAA,CAAAC,QAAA,KAAwB;;;;;IAa9EP,EAPJ,CAAAC,cAAA,cAKC,cAC8B,QACxB;IAAAD,EAAA,CAAAE,MAAA,GAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAC5BH,EAAA,CAAAC,cAAA,eAA2B;IAAAD,EAAA,CAAAE,MAAA,GAA0C;IAEzEF,EAFyE,CAAAG,YAAA,EAAO,EACxE,EACF;;;;;IANJH,EADA,CAAAQ,WAAA,SAAAF,MAAA,CAAAG,mBAAA,CAAAC,UAAA,EAA2C,cAAAJ,MAAA,CAAAG,mBAAA,CAAAC,UAAA,EACK;IAG3CV,EAAA,CAAAI,SAAA,GAAqB;IAArBJ,EAAA,CAAAW,iBAAA,CAAAD,UAAA,CAAAE,OAAA,CAAqB;IACGZ,EAAA,CAAAI,SAAA,GAA0C;IAA1CJ,EAAA,CAAAW,iBAAA,CAAAL,MAAA,CAAAO,iBAAA,CAAAH,UAAA,CAAAI,SAAA,EAA0C;;;;;IAiBvEd,EAAA,CAAAC,cAAA,WAAyB;IAAAD,EAAA,CAAAE,MAAA,WAAI;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IACpCH,EAAA,CAAAC,cAAA,WAAwB;IAAAD,EAAA,CAAAE,MAAA,iBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;AA8KnD,OAAM,MAAOY,mBAAmB;EAY9BC,YACUC,KAAqB,EACrBC,MAAc,EACdC,WAAwB,EACxBC,EAAe;IAHf,KAAAH,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,EAAE,GAAFA,EAAE;IAdZ,KAAAC,QAAQ,GAAc,EAAE;IACxB,KAAAC,eAAe,GAAG,EAAE;IACpB,KAAAC,gBAAgB,GAAG,EAAE;IACrB,KAAAC,QAAQ,GAAG,KAAK;IAChB,KAAAjB,QAAQ,GAAG,EAAE;IACb,KAAAkB,SAAS,GAAG,KAAK;IAWf,IAAI,CAACC,WAAW,GAAG,IAAI,CAACN,EAAE,CAACO,KAAK,CAAC;MAC/Bf,OAAO,EAAE,CAAC,EAAE,EAAEb,UAAU,CAAC6B,QAAQ;KAClC,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,MAAM,GAAG,CAAC,IAAI,CAACb,KAAK,CAACc,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAE;IACtD,IAAI,CAACC,YAAY,EAAE;IACnB,IAAI,CAACC,YAAY,EAAE;IACnB,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAEAC,WAAWA,CAAA;IACT,IAAI,CAAClB,WAAW,CAACmB,UAAU,EAAE;IAC7B,IAAI,IAAI,CAACC,oBAAoB,EAAE;MAC7B,IAAI,CAACA,oBAAoB,CAACC,WAAW,EAAE;;EAE3C;EAEAN,YAAYA,CAAA;IACV;IACA,IAAI,IAAI,CAACJ,MAAM,KAAK,CAAC,EAAE;MACrB,IAAI,CAACR,eAAe,GAAG,aAAa;MACpC,IAAI,CAACC,gBAAgB,GAAG,oEAAoE;MAC5F,IAAI,CAACC,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACjB,QAAQ,GAAG,YAAY;KAC7B,MAAM;MACL,IAAI,CAACe,eAAe,GAAG,cAAc;MACrC,IAAI,CAACC,gBAAgB,GAAG,oEAAoE;MAC5F,IAAI,CAACC,QAAQ,GAAGiB,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG;MACnC,IAAI,CAACnC,QAAQ,GAAG,aAAa;;EAEjC;EAEA4B,YAAYA,CAAA;IACV;IACA,IAAI,IAAI,CAACL,MAAM,KAAK,CAAC,EAAE;MACrB,IAAI,CAACT,QAAQ,GAAG,CACd;QACEsB,EAAE,EAAE,CAAC;QACLC,QAAQ,EAAE,CAAC;QACXC,UAAU,EAAE,CAAC;QACbjC,OAAO,EAAE,oFAAoF;QAC7FE,SAAS,EAAE,IAAIgC,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,GAAG,OAAO,CAAC;QACzCC,MAAM,EAAE;OACT,EACD;QACEL,EAAE,EAAE,CAAC;QACLC,QAAQ,EAAE,CAAC;QACXC,UAAU,EAAE,CAAC;QACbjC,OAAO,EAAE,0EAA0E;QACnFE,SAAS,EAAE,IAAIgC,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,GAAG,OAAO,CAAC;QACzCC,MAAM,EAAE;OACT,EACD;QACEL,EAAE,EAAE,CAAC;QACLC,QAAQ,EAAE,CAAC;QACXC,UAAU,EAAE,CAAC;QACbjC,OAAO,EAAE,8EAA8E;QACvFE,SAAS,EAAE,IAAIgC,IAAI,EAAE;QACrBE,MAAM,EAAE;OACT,CACF;KACF,MAAM;MACL,IAAI,CAAC3B,QAAQ,GAAG,CACd;QACEsB,EAAE,EAAE,CAAC;QACLC,QAAQ,EAAE,CAAC;QACXC,UAAU,EAAE,CAAC;QACbjC,OAAO,EAAE,6BAA6B;QACtCE,SAAS,EAAE,IAAIgC,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,GAAG,OAAO,CAAC;QACzCC,MAAM,EAAE;OACT,EACD;QACEL,EAAE,EAAE,CAAC;QACLC,QAAQ,EAAE,CAAC;QACXC,UAAU,EAAE,CAAC;QACbjC,OAAO,EAAE,qDAAqD;QAC9DE,SAAS,EAAE,IAAIgC,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,GAAG,OAAO,CAAC;QACzCC,MAAM,EAAE;OACT,CACF;;IAEH,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAb,kBAAkBA,CAAA;IAChB,IAAI,CAACjB,WAAW,CAAC+B,aAAa,CAAC,IAAI,CAACpB,MAAM,CAAC;IAE3C,IAAI,CAACS,oBAAoB,GAAG,IAAI,CAACpB,WAAW,CAACgC,SAAS,CAACC,SAAS,CAAE/B,QAAa,IAAI;MACjF,IAAI,CAACA,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAAC4B,cAAc,EAAE;IACvB,CAAC,CAAC;EACJ;EAEAI,WAAWA,CAAA;IACT,IAAI,IAAI,CAAC3B,WAAW,CAAC4B,KAAK,EAAE;MAC1B,MAAM1C,OAAO,GAAG,IAAI,CAACc,WAAW,CAAC6B,KAAK,CAAC3C,OAAO;MAC9C,IAAI,CAACa,SAAS,GAAG,IAAI;MAErB,IAAI,CAACN,WAAW,CAACkC,WAAW,CAAC,IAAI,CAACvB,MAAM,EAAElB,OAAO,CAAC,CAACwC,SAAS,CAAC;QAC3DI,IAAI,EAAGC,OAAY,IAAI;UACrB,IAAI,CAACpC,QAAQ,CAACqC,IAAI,CAACD,OAAO,CAAC;UAC3B,IAAI,CAAC/B,WAAW,CAACiC,KAAK,EAAE;UACxB,IAAI,CAAClC,SAAS,GAAG,KAAK;UACtB,IAAI,CAACwB,cAAc,EAAE;QACvB,CAAC;QACDW,KAAK,EAAGA,KAAU,IAAI;UACpBC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;UAC9C,IAAI,CAACnC,SAAS,GAAG,KAAK;QACxB;OACD,CAAC;;EAEN;EAEAhB,mBAAmBA,CAACgD,OAAgB;IAClC;IACA,OAAOhB,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG;EAC5B;EAEA7B,iBAAiBA,CAACC,SAAe;IAC/B,MAAMgD,IAAI,GAAG,IAAIhB,IAAI,CAAChC,SAAS,CAAC;IAChC,OAAOgD,IAAI,CAACC,kBAAkB,CAAC,EAAE,EAAE;MAAEC,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAS,CAAE,CAAC;EAC5E;EAEAhB,cAAcA,CAAA;IACZ;IACAiB,UAAU,CAAC,MAAK;MACd,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC;MAC1D,IAAIF,SAAS,EAAE;QACbA,SAAS,CAACG,SAAS,GAAGH,SAAS,CAACI,YAAY;;IAEhD,CAAC,EAAE,GAAG,CAAC;EACT;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAACtD,MAAM,CAACuD,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACjC;;;uBA3JW1D,mBAAmB,EAAAf,EAAA,CAAA0E,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAA5E,EAAA,CAAA0E,iBAAA,CAAAC,EAAA,CAAAE,MAAA,GAAA7E,EAAA,CAAA0E,iBAAA,CAAAI,EAAA,CAAAC,WAAA,GAAA/E,EAAA,CAAA0E,iBAAA,CAAAM,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAnBlE,mBAAmB;MAAAmE,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;UA1NxBxF,EAFJ,CAAAC,cAAA,aAAmC,aACR,gBACqB;UAAnBD,EAAA,CAAA0F,UAAA,mBAAAC,qDAAA;YAAA3F,EAAA,CAAA4F,aAAA,CAAAC,GAAA;YAAA,OAAA7F,EAAA,CAAA8F,WAAA,CAASL,GAAA,CAAAjB,MAAA,EAAQ;UAAA,EAAC;UACzCxE,EAAA,CAAAE,MAAA,oBACF;UAAAF,EAAA,CAAAG,YAAA,EAAS;UACTH,EAAA,CAAAC,cAAA,aAAuB;UACrBD,EAAA,CAAA+F,SAAA,aAIC;UAEC/F,EADF,CAAAC,cAAA,aAAiC,SAC3B;UAAAD,EAAA,CAAAE,MAAA,GAAqB;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAE9BH,EADA,CAAAgG,UAAA,IAAAC,mCAAA,kBAA6C,KAAAC,oCAAA,kBACS;UAG5DlG,EAFI,CAAAG,YAAA,EAAM,EACF,EACF;UAENH,EAAA,CAAAC,cAAA,iBAA8C;UAC5CD,EAAA,CAAAgG,UAAA,KAAAG,mCAAA,kBAKC;UAMHnG,EAAA,CAAAG,YAAA,EAAM;UAENH,EAAA,CAAAC,cAAA,gBAA8E;UAA9CD,EAAA,CAAA0F,UAAA,sBAAAU,uDAAA;YAAApG,EAAA,CAAA4F,aAAA,CAAAC,GAAA;YAAA,OAAA7F,EAAA,CAAA8F,WAAA,CAAYL,GAAA,CAAApC,WAAA,EAAa;UAAA,EAAC;UACxDrD,EAAA,CAAA+F,SAAA,iBAKC;UACD/F,EAAA,CAAAC,cAAA,kBAIC;UAECD,EADA,CAAAgG,UAAA,KAAAK,oCAAA,mBAAyB,KAAAC,oCAAA,mBACD;UAG9BtG,EAFI,CAAAG,YAAA,EAAS,EACJ,EACH;;;UA1CEH,EAAA,CAAAI,SAAA,GAAwB;UACxBJ,EADA,CAAAuG,UAAA,QAAAd,GAAA,CAAAlE,gBAAA,EAAAvB,EAAA,CAAAwG,aAAA,CAAwB,QAAAf,GAAA,CAAAnE,eAAA,CACD;UAInBtB,EAAA,CAAAI,SAAA,GAAqB;UAArBJ,EAAA,CAAAW,iBAAA,CAAA8E,GAAA,CAAAnE,eAAA,CAAqB;UACItB,EAAA,CAAAI,SAAA,EAAc;UAAdJ,EAAA,CAAAuG,UAAA,SAAAd,GAAA,CAAAjE,QAAA,CAAc;UACNxB,EAAA,CAAAI,SAAA,EAAe;UAAfJ,EAAA,CAAAuG,UAAA,UAAAd,GAAA,CAAAjE,QAAA,CAAe;UAOlCxB,EAAA,CAAAI,SAAA,GAAW;UAAXJ,EAAA,CAAAuG,UAAA,YAAAd,GAAA,CAAApE,QAAA,CAAW;UAY7BrB,EAAA,CAAAI,SAAA,EAAyB;UAAzBJ,EAAA,CAAAuG,UAAA,cAAAd,GAAA,CAAA/D,WAAA,CAAyB;UAU3B1B,EAAA,CAAAI,SAAA,GAA6C;UAA7CJ,EAAA,CAAAuG,UAAA,aAAAd,GAAA,CAAA/D,WAAA,CAAA+E,OAAA,IAAAhB,GAAA,CAAAhE,SAAA,CAA6C;UAEtCzB,EAAA,CAAAI,SAAA,EAAgB;UAAhBJ,EAAA,CAAAuG,UAAA,UAAAd,GAAA,CAAAhE,SAAA,CAAgB;UAChBzB,EAAA,CAAAI,SAAA,EAAe;UAAfJ,EAAA,CAAAuG,UAAA,SAAAd,GAAA,CAAAhE,SAAA,CAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}