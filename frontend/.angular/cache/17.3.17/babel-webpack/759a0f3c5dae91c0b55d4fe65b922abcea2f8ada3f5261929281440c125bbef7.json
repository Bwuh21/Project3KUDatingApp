{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LikedUsersComponent = class LikedUsersComponent {\n  constructor(profileService) {\n    this.profileService = profileService;\n    this.likedUsers = [];\n    this.isLoading = false;\n    this.errorMessage = '';\n  }\n  ngOnInit() {\n    this.loadLikedUsers();\n  }\n  loadLikedUsers() {\n    this.isLoading = true;\n    this.errorMessage = '';\n    this.profileService.getLikedUsers().subscribe({\n      next: users => {\n        this.likedUsers = users;\n        this.isLoading = false;\n      },\n      error: error => {\n        this.errorMessage = 'Failed to load liked users. Please try again.';\n        this.isLoading = false;\n      }\n    });\n  }\n  removeLike(match) {\n    // In real app, this would call an API to remove the like\n    this.likedUsers = this.likedUsers.filter(u => u.id !== match.id);\n  }\n  startChat(match) {\n    // In real app, this would navigate to chat or create a new chat\n    console.log('Starting chat with:', match.user.name);\n  }\n  goToMatches() {\n    // Navigate to matches page\n    window.location.href = '/matches';\n  }\n  getDefaultImage() {\n    return 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400';\n  }\n};\nLikedUsersComponent = __decorate([Component({\n  selector: 'app-liked-users',\n  template: `\n    <div class=\"liked-users-container\">\n      <div class=\"liked-header\">\n        <h1>Liked Profiles</h1>\n        <p class=\"subtitle\">People you've liked</p>\n      </div>\n\n      <div class=\"liked-grid\" *ngIf=\"likedUsers.length > 0\">\n        <div \n          *ngFor=\"let match of likedUsers\" \n          class=\"liked-card\"\n        >\n          <div class=\"card-image\">\n            <img \n              [src]=\"match.user.profileImage || getDefaultImage()\" \n              [alt]=\"match.user.name\"\n            >\n            <div class=\"compatibility-badge\">\n              {{ match.compatibility }}% Match\n            </div>\n          </div>\n\n          <div class=\"card-content\">\n            <h3>{{ match.user.name }}, {{ match.user.age }}</h3>\n            <p class=\"user-info\">{{ match.user.year }} • {{ match.user.major }}</p>\n            <p class=\"user-bio\">{{ match.user.bio }}</p>\n\n            <div class=\"mutual-interests\" *ngIf=\"match.mutualInterests.length > 0\">\n              <p class=\"mutual-label\">Mutual interests:</p>\n              <div class=\"mutual-tags\">\n                <span \n                  *ngFor=\"let interest of match.mutualInterests.slice(0, 3)\" \n                  class=\"mutual-tag\"\n                >\n                  {{ interest }}\n                </span>\n              </div>\n            </div>\n\n            <div class=\"card-actions\">\n              <button class=\"btn btn-outline\" (click)=\"removeLike(match)\">\n                Remove Like\n              </button>\n              <button class=\"btn btn-primary\" (click)=\"startChat(match)\">\n                Start Chat\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"no-likes\" *ngIf=\"likedUsers.length === 0 && !isLoading\">\n        <div class=\"no-likes-content\">\n          <h2>No likes yet</h2>\n          <p>Start swiping to find people you like!</p>\n          <button class=\"btn btn-primary\" (click)=\"goToMatches()\">\n            Find Matches\n          </button>\n        </div>\n      </div>\n\n      <div class=\"loading\" *ngIf=\"isLoading\">\n        <div class=\"loading-spinner\"></div>\n        <p>Loading liked profiles...</p>\n      </div>\n\n      <div class=\"error-message\" *ngIf=\"errorMessage\">\n        {{ errorMessage }}\n      </div>\n    </div>\n  `,\n  styles: [`\n    .liked-users-container {\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 2rem;\n    }\n\n    .liked-header {\n      text-align: center;\n      margin-bottom: 3rem;\n    }\n\n    .liked-header h1 {\n      color: white;\n      font-size: 2.5rem;\n      margin-bottom: 0.5rem;\n    }\n\n    .subtitle {\n      color: rgba(255, 255, 255, 0.8);\n      font-size: 1.2rem;\n    }\n\n    .liked-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n      gap: 2rem;\n    }\n\n    .liked-card {\n      background: white;\n      border-radius: 20px;\n      overflow: hidden;\n      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n      transition: transform 0.3s ease;\n    }\n\n    .liked-card:hover {\n      transform: translateY(-5px);\n    }\n\n    .card-image {\n      position: relative;\n      height: 200px;\n      overflow: hidden;\n    }\n\n    .card-image img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n    }\n\n    .compatibility-badge {\n      position: absolute;\n      top: 1rem;\n      right: 1rem;\n      background: rgba(255, 255, 255, 0.9);\n      color: #667eea;\n      padding: 0.25rem 0.75rem;\n      border-radius: 15px;\n      font-size: 0.8rem;\n      font-weight: 600;\n    }\n\n    .card-content {\n      padding: 1.5rem;\n    }\n\n    .card-content h3 {\n      color: #333;\n      font-size: 1.3rem;\n      margin-bottom: 0.5rem;\n    }\n\n    .user-info {\n      color: #6c757d;\n      font-size: 0.9rem;\n      margin-bottom: 1rem;\n    }\n\n    .user-bio {\n      color: #555;\n      line-height: 1.5;\n      margin-bottom: 1rem;\n    }\n\n    .mutual-interests {\n      background: #e8f5e8;\n      padding: 1rem;\n      border-radius: 10px;\n      margin-bottom: 1rem;\n    }\n\n    .mutual-label {\n      font-size: 0.8rem;\n      color: #28a745;\n      font-weight: 600;\n      margin-bottom: 0.5rem;\n    }\n\n    .mutual-tags {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.5rem;\n    }\n\n    .mutual-tag {\n      background: #28a745;\n      color: white;\n      padding: 0.25rem 0.75rem;\n      border-radius: 15px;\n      font-size: 0.8rem;\n    }\n\n    .card-actions {\n      display: flex;\n      gap: 1rem;\n    }\n\n    .card-actions .btn {\n      flex: 1;\n      padding: 0.75rem;\n      border-radius: 10px;\n      font-weight: 600;\n      cursor: pointer;\n      transition: all 0.3s ease;\n    }\n\n    .no-likes {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      min-height: 400px;\n    }\n\n    .no-likes-content {\n      text-align: center;\n      background: white;\n      padding: 3rem;\n      border-radius: 20px;\n      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n    }\n\n    .no-likes-content h2 {\n      color: #667eea;\n      margin-bottom: 1rem;\n    }\n\n    .loading {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      min-height: 400px;\n      color: white;\n    }\n\n    .loading-spinner {\n      width: 50px;\n      height: 50px;\n      border: 4px solid rgba(255, 255, 255, 0.3);\n      border-top: 4px solid white;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n      margin-bottom: 1rem;\n    }\n\n    @keyframes spin {\n      0% { transform: rotate(0deg); }\n      100% { transform: rotate(360deg); }\n    }\n\n    .error-message {\n      background: #f8d7da;\n      color: #721c24;\n      padding: 1rem;\n      border-radius: 8px;\n      text-align: center;\n    }\n\n    @media (max-width: 768px) {\n      .liked-grid {\n        grid-template-columns: 1fr;\n      }\n      \n      .card-actions {\n        flex-direction: column;\n      }\n    }\n  `]\n})], LikedUsersComponent);\nexport { LikedUsersComponent };","map":{"version":3,"names":["Component","LikedUsersComponent","constructor","profileService","likedUsers","isLoading","errorMessage","ngOnInit","loadLikedUsers","getLikedUsers","subscribe","next","users","error","removeLike","match","filter","u","id","startChat","console","log","user","name","goToMatches","window","location","href","getDefaultImage","__decorate","selector","template","styles"],"sources":["C:\\Users\\super\\Project3KUDatingApp\\frontend\\src\\app\\shared\\components\\liked-users\\liked-users.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ProfileService, Match } from '../../services/profile.service';\r\n\r\n@Component({\r\n  selector: 'app-liked-users',\r\n  template: `\r\n    <div class=\"liked-users-container\">\r\n      <div class=\"liked-header\">\r\n        <h1>Liked Profiles</h1>\r\n        <p class=\"subtitle\">People you've liked</p>\r\n      </div>\r\n\r\n      <div class=\"liked-grid\" *ngIf=\"likedUsers.length > 0\">\r\n        <div \r\n          *ngFor=\"let match of likedUsers\" \r\n          class=\"liked-card\"\r\n        >\r\n          <div class=\"card-image\">\r\n            <img \r\n              [src]=\"match.user.profileImage || getDefaultImage()\" \r\n              [alt]=\"match.user.name\"\r\n            >\r\n            <div class=\"compatibility-badge\">\r\n              {{ match.compatibility }}% Match\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"card-content\">\r\n            <h3>{{ match.user.name }}, {{ match.user.age }}</h3>\r\n            <p class=\"user-info\">{{ match.user.year }} • {{ match.user.major }}</p>\r\n            <p class=\"user-bio\">{{ match.user.bio }}</p>\r\n\r\n            <div class=\"mutual-interests\" *ngIf=\"match.mutualInterests.length > 0\">\r\n              <p class=\"mutual-label\">Mutual interests:</p>\r\n              <div class=\"mutual-tags\">\r\n                <span \r\n                  *ngFor=\"let interest of match.mutualInterests.slice(0, 3)\" \r\n                  class=\"mutual-tag\"\r\n                >\r\n                  {{ interest }}\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"card-actions\">\r\n              <button class=\"btn btn-outline\" (click)=\"removeLike(match)\">\r\n                Remove Like\r\n              </button>\r\n              <button class=\"btn btn-primary\" (click)=\"startChat(match)\">\r\n                Start Chat\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"no-likes\" *ngIf=\"likedUsers.length === 0 && !isLoading\">\r\n        <div class=\"no-likes-content\">\r\n          <h2>No likes yet</h2>\r\n          <p>Start swiping to find people you like!</p>\r\n          <button class=\"btn btn-primary\" (click)=\"goToMatches()\">\r\n            Find Matches\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"loading\" *ngIf=\"isLoading\">\r\n        <div class=\"loading-spinner\"></div>\r\n        <p>Loading liked profiles...</p>\r\n      </div>\r\n\r\n      <div class=\"error-message\" *ngIf=\"errorMessage\">\r\n        {{ errorMessage }}\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .liked-users-container {\r\n      max-width: 1200px;\r\n      margin: 0 auto;\r\n      padding: 2rem;\r\n    }\r\n\r\n    .liked-header {\r\n      text-align: center;\r\n      margin-bottom: 3rem;\r\n    }\r\n\r\n    .liked-header h1 {\r\n      color: white;\r\n      font-size: 2.5rem;\r\n      margin-bottom: 0.5rem;\r\n    }\r\n\r\n    .subtitle {\r\n      color: rgba(255, 255, 255, 0.8);\r\n      font-size: 1.2rem;\r\n    }\r\n\r\n    .liked-grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n      gap: 2rem;\r\n    }\r\n\r\n    .liked-card {\r\n      background: white;\r\n      border-radius: 20px;\r\n      overflow: hidden;\r\n      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\r\n      transition: transform 0.3s ease;\r\n    }\r\n\r\n    .liked-card:hover {\r\n      transform: translateY(-5px);\r\n    }\r\n\r\n    .card-image {\r\n      position: relative;\r\n      height: 200px;\r\n      overflow: hidden;\r\n    }\r\n\r\n    .card-image img {\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: cover;\r\n    }\r\n\r\n    .compatibility-badge {\r\n      position: absolute;\r\n      top: 1rem;\r\n      right: 1rem;\r\n      background: rgba(255, 255, 255, 0.9);\r\n      color: #667eea;\r\n      padding: 0.25rem 0.75rem;\r\n      border-radius: 15px;\r\n      font-size: 0.8rem;\r\n      font-weight: 600;\r\n    }\r\n\r\n    .card-content {\r\n      padding: 1.5rem;\r\n    }\r\n\r\n    .card-content h3 {\r\n      color: #333;\r\n      font-size: 1.3rem;\r\n      margin-bottom: 0.5rem;\r\n    }\r\n\r\n    .user-info {\r\n      color: #6c757d;\r\n      font-size: 0.9rem;\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    .user-bio {\r\n      color: #555;\r\n      line-height: 1.5;\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    .mutual-interests {\r\n      background: #e8f5e8;\r\n      padding: 1rem;\r\n      border-radius: 10px;\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    .mutual-label {\r\n      font-size: 0.8rem;\r\n      color: #28a745;\r\n      font-weight: 600;\r\n      margin-bottom: 0.5rem;\r\n    }\r\n\r\n    .mutual-tags {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      gap: 0.5rem;\r\n    }\r\n\r\n    .mutual-tag {\r\n      background: #28a745;\r\n      color: white;\r\n      padding: 0.25rem 0.75rem;\r\n      border-radius: 15px;\r\n      font-size: 0.8rem;\r\n    }\r\n\r\n    .card-actions {\r\n      display: flex;\r\n      gap: 1rem;\r\n    }\r\n\r\n    .card-actions .btn {\r\n      flex: 1;\r\n      padding: 0.75rem;\r\n      border-radius: 10px;\r\n      font-weight: 600;\r\n      cursor: pointer;\r\n      transition: all 0.3s ease;\r\n    }\r\n\r\n    .no-likes {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      min-height: 400px;\r\n    }\r\n\r\n    .no-likes-content {\r\n      text-align: center;\r\n      background: white;\r\n      padding: 3rem;\r\n      border-radius: 20px;\r\n      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\r\n    }\r\n\r\n    .no-likes-content h2 {\r\n      color: #667eea;\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    .loading {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      min-height: 400px;\r\n      color: white;\r\n    }\r\n\r\n    .loading-spinner {\r\n      width: 50px;\r\n      height: 50px;\r\n      border: 4px solid rgba(255, 255, 255, 0.3);\r\n      border-top: 4px solid white;\r\n      border-radius: 50%;\r\n      animation: spin 1s linear infinite;\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    @keyframes spin {\r\n      0% { transform: rotate(0deg); }\r\n      100% { transform: rotate(360deg); }\r\n    }\r\n\r\n    .error-message {\r\n      background: #f8d7da;\r\n      color: #721c24;\r\n      padding: 1rem;\r\n      border-radius: 8px;\r\n      text-align: center;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      .liked-grid {\r\n        grid-template-columns: 1fr;\r\n      }\r\n      \r\n      .card-actions {\r\n        flex-direction: column;\r\n      }\r\n    }\r\n  `]\r\n})\r\nexport class LikedUsersComponent implements OnInit {\r\n  likedUsers: Match[] = [];\r\n  isLoading = false;\r\n  errorMessage = '';\r\n\r\n  constructor(private profileService: ProfileService) {}\r\n\r\n  ngOnInit() {\r\n    this.loadLikedUsers();\r\n  }\r\n\r\n  loadLikedUsers() {\r\n    this.isLoading = true;\r\n    this.errorMessage = '';\r\n\r\n    this.profileService.getLikedUsers().subscribe({\r\n      next: (users) => {\r\n        this.likedUsers = users;\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        this.errorMessage = 'Failed to load liked users. Please try again.';\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  removeLike(match: Match) {\r\n    // In real app, this would call an API to remove the like\r\n    this.likedUsers = this.likedUsers.filter(u => u.id !== match.id);\r\n  }\r\n\r\n  startChat(match: Match) {\r\n    // In real app, this would navigate to chat or create a new chat\r\n    console.log('Starting chat with:', match.user.name);\r\n  }\r\n\r\n  goToMatches() {\r\n    // Navigate to matches page\r\n    window.location.href = '/matches';\r\n  }\r\n\r\n  getDefaultImage(): string {\r\n    return 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400';\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AA4Q1C,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAK9BC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAJlC,KAAAC,UAAU,GAAY,EAAE;IACxB,KAAAC,SAAS,GAAG,KAAK;IACjB,KAAAC,YAAY,GAAG,EAAE;EAEoC;EAErDC,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAA,cAAcA,CAAA;IACZ,IAAI,CAACH,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,YAAY,GAAG,EAAE;IAEtB,IAAI,CAACH,cAAc,CAACM,aAAa,EAAE,CAACC,SAAS,CAAC;MAC5CC,IAAI,EAAGC,KAAK,IAAI;QACd,IAAI,CAACR,UAAU,GAAGQ,KAAK;QACvB,IAAI,CAACP,SAAS,GAAG,KAAK;MACxB,CAAC;MACDQ,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACP,YAAY,GAAG,+CAA+C;QACnE,IAAI,CAACD,SAAS,GAAG,KAAK;MACxB;KACD,CAAC;EACJ;EAEAS,UAAUA,CAACC,KAAY;IACrB;IACA,IAAI,CAACX,UAAU,GAAG,IAAI,CAACA,UAAU,CAACY,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKH,KAAK,CAACG,EAAE,CAAC;EAClE;EAEAC,SAASA,CAACJ,KAAY;IACpB;IACAK,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEN,KAAK,CAACO,IAAI,CAACC,IAAI,CAAC;EACrD;EAEAC,WAAWA,CAAA;IACT;IACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,UAAU;EACnC;EAEAC,eAAeA,CAAA;IACb,OAAO,oEAAoE;EAC7E;CACD;AA7CY3B,mBAAmB,GAAA4B,UAAA,EAzQ/B7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,iBAAiB;EAC3BC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAsET;EACDC,MAAM,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8LR;CACF,CAAC,C,EACW/B,mBAAmB,CA6C/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}