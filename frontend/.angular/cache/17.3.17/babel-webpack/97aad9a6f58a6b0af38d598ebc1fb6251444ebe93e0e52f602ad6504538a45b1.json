{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet RegisterComponent = class RegisterComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.isLoading = false;\n    this.errorMessage = '';\n    this.registerForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email, this.kuEmailValidator]],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      name: ['', Validators.required],\n      age: ['', [Validators.required, Validators.min(18), Validators.max(30)]],\n      year: ['', Validators.required],\n      major: ['', Validators.required]\n    });\n  }\n  kuEmailValidator(control) {\n    const email = control.value;\n    if (email && !email.endsWith('@ku.edu')) {\n      return {\n        kuEmail: true\n      };\n    }\n    return null;\n  }\n  onSubmit() {\n    if (this.registerForm.valid) {\n      this.isLoading = true;\n      this.errorMessage = '';\n      this.authService.register(this.registerForm.value).subscribe({\n        next: response => {\n          this.isLoading = false;\n          this.router.navigate(['/profile']);\n        },\n        error: error => {\n          this.isLoading = false;\n          this.errorMessage = error.error?.message || 'Registration failed. Please try again.';\n        }\n      });\n    }\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  template: `\n    <div class=\"auth-container\">\n      <div class=\"auth-card\">\n        <div class=\"auth-header\">\n          <h1>❤️ JayMatch</h1>\n          <p class=\"subtitle\">Join the KU dating community!</p>\n        </div>\n\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" class=\"auth-form\">\n          <div class=\"form-group\">\n            <label for=\"email\">KU Email</label>\n            <input \n              type=\"email\" \n              id=\"email\"\n              formControlName=\"email\"\n              placeholder=\"yourname@ku.edu\"\n              [class.error]=\"registerForm.get('email')?.invalid && registerForm.get('email')?.touched\"\n            >\n            <div class=\"error-message\" *ngIf=\"registerForm.get('email')?.invalid && registerForm.get('email')?.touched\">\n              <span *ngIf=\"registerForm.get('email')?.errors?.['required']\">Email is required</span>\n              <span *ngIf=\"registerForm.get('email')?.errors?.['email']\">Please enter a valid email</span>\n              <span *ngIf=\"registerForm.get('email')?.errors?.['kuEmail']\">Must be a KU email (@ku.edu)</span>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input \n              type=\"password\" \n              id=\"password\"\n              formControlName=\"password\"\n              placeholder=\"Create a strong password\"\n              [class.error]=\"registerForm.get('password')?.invalid && registerForm.get('password')?.touched\"\n            >\n            <div class=\"error-message\" *ngIf=\"registerForm.get('password')?.invalid && registerForm.get('password')?.touched\">\n              <span *ngIf=\"registerForm.get('password')?.errors?.['required']\">Password is required</span>\n              <span *ngIf=\"registerForm.get('password')?.errors?.['minlength']\">Password must be at least 8 characters</span>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"name\">Full Name</label>\n            <input \n              type=\"text\" \n              id=\"name\"\n              formControlName=\"name\"\n              placeholder=\"Enter your full name\"\n              [class.error]=\"registerForm.get('name')?.invalid && registerForm.get('name')?.touched\"\n            >\n            <div class=\"error-message\" *ngIf=\"registerForm.get('name')?.invalid && registerForm.get('name')?.touched\">\n              Name is required\n            </div>\n          </div>\n\n          <div class=\"form-row\">\n            <div class=\"form-group\">\n              <label for=\"age\">Age</label>\n              <input \n                type=\"number\" \n                id=\"age\"\n                formControlName=\"age\"\n                placeholder=\"18\"\n                min=\"18\"\n                max=\"30\"\n                [class.error]=\"registerForm.get('age')?.invalid && registerForm.get('age')?.touched\"\n              >\n              <div class=\"error-message\" *ngIf=\"registerForm.get('age')?.invalid && registerForm.get('age')?.touched\">\n                Age is required (18-30)\n              </div>\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"year\">Year</label>\n              <select \n                id=\"year\"\n                formControlName=\"year\"\n                [class.error]=\"registerForm.get('year')?.invalid && registerForm.get('year')?.touched\"\n              >\n                <option value=\"\">Select year</option>\n                <option value=\"Freshman\">Freshman</option>\n                <option value=\"Sophomore\">Sophomore</option>\n                <option value=\"Junior\">Junior</option>\n                <option value=\"Senior\">Senior</option>\n                <option value=\"Graduate\">Graduate</option>\n              </select>\n              <div class=\"error-message\" *ngIf=\"registerForm.get('year')?.invalid && registerForm.get('year')?.touched\">\n                Year is required\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"major\">Major</label>\n            <input \n              type=\"text\" \n              id=\"major\"\n              formControlName=\"major\"\n              placeholder=\"e.g., Computer Science\"\n              [class.error]=\"registerForm.get('major')?.invalid && registerForm.get('major')?.touched\"\n            >\n            <div class=\"error-message\" *ngIf=\"registerForm.get('major')?.invalid && registerForm.get('major')?.touched\">\n              Major is required\n            </div>\n          </div>\n\n          <button \n            type=\"submit\" \n            class=\"btn btn-primary full-width\"\n            [disabled]=\"registerForm.invalid || isLoading\"\n          >\n            <span *ngIf=\"!isLoading\">Create Account</span>\n            <span *ngIf=\"isLoading\">Creating Account...</span>\n          </button>\n        </form>\n\n        <div class=\"auth-footer\">\n          <p>Already have an account? <a routerLink=\"/login\">Sign in</a></p>\n        </div>\n\n        <div class=\"error-alert\" *ngIf=\"errorMessage\">\n          {{ errorMessage }}\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .form-row {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      gap: 1rem;\n    }\n\n    select {\n      width: 100%;\n      padding: 12px 16px;\n      border: 2px solid #e9ecef;\n      border-radius: 8px;\n      font-size: 16px;\n      background: white;\n      transition: border-color 0.3s ease;\n    }\n\n    select:focus {\n      outline: none;\n      border-color: #667eea;\n    }\n\n    select.error {\n      border-color: #dc3545;\n    }\n\n    @media (max-width: 480px) {\n      .form-row {\n        grid-template-columns: 1fr;\n      }\n    }\n  `]\n})], RegisterComponent);\nexport { RegisterComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}