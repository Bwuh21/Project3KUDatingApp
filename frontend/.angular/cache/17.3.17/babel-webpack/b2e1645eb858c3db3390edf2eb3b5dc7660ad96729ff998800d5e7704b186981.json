{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet MatchListComponent = class MatchListComponent {\n  constructor(profileService, authService) {\n    this.profileService = profileService;\n    this.authService = authService;\n    this.dailyMatches = [];\n    this.isLoading = false;\n    this.errorMessage = '';\n    this.likedCount = 0;\n  }\n  ngOnInit() {\n    this.loadDailyMatches();\n  }\n  loadDailyMatches() {\n    this.isLoading = true;\n    this.errorMessage = '';\n    this.profileService.getDailyMatches().subscribe({\n      next: matches => {\n        this.dailyMatches = matches;\n        this.isLoading = false;\n      },\n      error: error => {\n        this.errorMessage = 'Failed to load matches. Please try again.';\n        this.isLoading = false;\n      }\n    });\n  }\n  onLike(match) {\n    this.profileService.likeUser(match.user.id).subscribe({\n      next: () => {\n        this.likedCount++;\n        this.dailyMatches = this.dailyMatches.filter(m => m.id !== match.id);\n      },\n      error: error => {\n        console.error('Error liking user:', error);\n      }\n    });\n  }\n  onPass(match) {\n    this.profileService.passUser(match.user.id).subscribe({\n      next: () => {\n        this.dailyMatches = this.dailyMatches.filter(m => m.id !== match.id);\n      },\n      error: error => {\n        console.error('Error passing user:', error);\n      }\n    });\n  }\n  refreshMatches() {\n    this.loadDailyMatches();\n  }\n};\nMatchListComponent = __decorate([Component({\n  selector: 'app-match-list',\n  template: `\n    <div class=\"matches-container\">\n      <div class=\"matches-header\">\n        <h1>Your Daily 10</h1>\n        <p class=\"subtitle\">Today's personalized matches just for you</p>\n        <div class=\"match-stats\">\n          <span class=\"stat\">\n            <strong>{{ dailyMatches.length }}</strong> matches today\n          </span>\n          <span class=\"stat\">\n            <strong>{{ likedCount }}</strong> liked\n          </span>\n        </div>\n      </div>\n\n      <div class=\"matches-grid\" *ngIf=\"dailyMatches.length > 0\">\n        <app-match-card \n          *ngFor=\"let match of dailyMatches; let i = index\"\n          [match]=\"match\"\n          [index]=\"i\"\n          (like)=\"onLike($event)\"\n          (pass)=\"onPass($event)\"\n        ></app-match-card>\n      </div>\n\n      <div class=\"no-matches\" *ngIf=\"dailyMatches.length === 0 && !isLoading\">\n        <div class=\"no-matches-content\">\n          <h2>No matches today</h2>\n          <p>Check back tomorrow for new matches!</p>\n          <button class=\"btn btn-primary\" (click)=\"refreshMatches()\">\n            Refresh Matches\n          </button>\n        </div>\n      </div>\n\n      <div class=\"loading\" *ngIf=\"isLoading\">\n        <div class=\"loading-spinner\"></div>\n        <p>Finding your perfect matches...</p>\n      </div>\n\n      <div class=\"error-message\" *ngIf=\"errorMessage\">\n        {{ errorMessage }}\n      </div>\n    </div>\n  `,\n  styles: [`\n    .matches-container {\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 2rem;\n    }\n\n    .matches-header {\n      text-align: center;\n      margin-bottom: 3rem;\n    }\n\n    .matches-header h1 {\n      color: white;\n      font-size: 2.5rem;\n      margin-bottom: 0.5rem;\n    }\n\n    .subtitle {\n      color: rgba(255, 255, 255, 0.8);\n      font-size: 1.2rem;\n      margin-bottom: 1rem;\n    }\n\n    .match-stats {\n      display: flex;\n      justify-content: center;\n      gap: 2rem;\n      margin-top: 1rem;\n    }\n\n    .stat {\n      background: rgba(255, 255, 255, 0.1);\n      padding: 0.5rem 1rem;\n      border-radius: 20px;\n      color: white;\n      font-size: 0.9rem;\n    }\n\n    .matches-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n      gap: 2rem;\n      margin-bottom: 2rem;\n    }\n\n    .no-matches {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      min-height: 400px;\n    }\n\n    .no-matches-content {\n      text-align: center;\n      background: white;\n      padding: 3rem;\n      border-radius: 20px;\n      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n    }\n\n    .no-matches-content h2 {\n      color: #667eea;\n      margin-bottom: 1rem;\n    }\n\n    .loading {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      min-height: 400px;\n      color: white;\n    }\n\n    .loading-spinner {\n      width: 50px;\n      height: 50px;\n      border: 4px solid rgba(255, 255, 255, 0.3);\n      border-top: 4px solid white;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n      margin-bottom: 1rem;\n    }\n\n    @keyframes spin {\n      0% { transform: rotate(0deg); }\n      100% { transform: rotate(360deg); }\n    }\n\n    .error-message {\n      background: #f8d7da;\n      color: #721c24;\n      padding: 1rem;\n      border-radius: 8px;\n      margin-top: 1rem;\n      text-align: center;\n    }\n\n    @media (max-width: 768px) {\n      .matches-grid {\n        grid-template-columns: 1fr;\n      }\n      \n      .match-stats {\n        flex-direction: column;\n        gap: 1rem;\n      }\n    }\n  `]\n})], MatchListComponent);\nexport { MatchListComponent };","map":{"version":3,"names":["Component","MatchListComponent","constructor","profileService","authService","dailyMatches","isLoading","errorMessage","likedCount","ngOnInit","loadDailyMatches","getDailyMatches","subscribe","next","matches","error","onLike","match","likeUser","user","id","filter","m","console","onPass","passUser","refreshMatches","__decorate","selector","template","styles"],"sources":["C:\\Users\\super\\Project3KUDatingApp\\frontend\\src\\app\\modules\\match\\components\\match-list\\match-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ProfileService, Match } from '../../services/profile.service';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-match-list',\r\n  template: `\r\n    <div class=\"matches-container\">\r\n      <div class=\"matches-header\">\r\n        <h1>Your Daily 10</h1>\r\n        <p class=\"subtitle\">Today's personalized matches just for you</p>\r\n        <div class=\"match-stats\">\r\n          <span class=\"stat\">\r\n            <strong>{{ dailyMatches.length }}</strong> matches today\r\n          </span>\r\n          <span class=\"stat\">\r\n            <strong>{{ likedCount }}</strong> liked\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"matches-grid\" *ngIf=\"dailyMatches.length > 0\">\r\n        <app-match-card \r\n          *ngFor=\"let match of dailyMatches; let i = index\"\r\n          [match]=\"match\"\r\n          [index]=\"i\"\r\n          (like)=\"onLike($event)\"\r\n          (pass)=\"onPass($event)\"\r\n        ></app-match-card>\r\n      </div>\r\n\r\n      <div class=\"no-matches\" *ngIf=\"dailyMatches.length === 0 && !isLoading\">\r\n        <div class=\"no-matches-content\">\r\n          <h2>No matches today</h2>\r\n          <p>Check back tomorrow for new matches!</p>\r\n          <button class=\"btn btn-primary\" (click)=\"refreshMatches()\">\r\n            Refresh Matches\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"loading\" *ngIf=\"isLoading\">\r\n        <div class=\"loading-spinner\"></div>\r\n        <p>Finding your perfect matches...</p>\r\n      </div>\r\n\r\n      <div class=\"error-message\" *ngIf=\"errorMessage\">\r\n        {{ errorMessage }}\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .matches-container {\r\n      max-width: 1200px;\r\n      margin: 0 auto;\r\n      padding: 2rem;\r\n    }\r\n\r\n    .matches-header {\r\n      text-align: center;\r\n      margin-bottom: 3rem;\r\n    }\r\n\r\n    .matches-header h1 {\r\n      color: white;\r\n      font-size: 2.5rem;\r\n      margin-bottom: 0.5rem;\r\n    }\r\n\r\n    .subtitle {\r\n      color: rgba(255, 255, 255, 0.8);\r\n      font-size: 1.2rem;\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    .match-stats {\r\n      display: flex;\r\n      justify-content: center;\r\n      gap: 2rem;\r\n      margin-top: 1rem;\r\n    }\r\n\r\n    .stat {\r\n      background: rgba(255, 255, 255, 0.1);\r\n      padding: 0.5rem 1rem;\r\n      border-radius: 20px;\r\n      color: white;\r\n      font-size: 0.9rem;\r\n    }\r\n\r\n    .matches-grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n      gap: 2rem;\r\n      margin-bottom: 2rem;\r\n    }\r\n\r\n    .no-matches {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      min-height: 400px;\r\n    }\r\n\r\n    .no-matches-content {\r\n      text-align: center;\r\n      background: white;\r\n      padding: 3rem;\r\n      border-radius: 20px;\r\n      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\r\n    }\r\n\r\n    .no-matches-content h2 {\r\n      color: #667eea;\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    .loading {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      min-height: 400px;\r\n      color: white;\r\n    }\r\n\r\n    .loading-spinner {\r\n      width: 50px;\r\n      height: 50px;\r\n      border: 4px solid rgba(255, 255, 255, 0.3);\r\n      border-top: 4px solid white;\r\n      border-radius: 50%;\r\n      animation: spin 1s linear infinite;\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    @keyframes spin {\r\n      0% { transform: rotate(0deg); }\r\n      100% { transform: rotate(360deg); }\r\n    }\r\n\r\n    .error-message {\r\n      background: #f8d7da;\r\n      color: #721c24;\r\n      padding: 1rem;\r\n      border-radius: 8px;\r\n      margin-top: 1rem;\r\n      text-align: center;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      .matches-grid {\r\n        grid-template-columns: 1fr;\r\n      }\r\n      \r\n      .match-stats {\r\n        flex-direction: column;\r\n        gap: 1rem;\r\n      }\r\n    }\r\n  `]\r\n})\r\nexport class MatchListComponent implements OnInit {\r\n  dailyMatches: Match[] = [];\r\n  isLoading = false;\r\n  errorMessage = '';\r\n  likedCount = 0;\r\n\r\n  constructor(\r\n    private profileService: ProfileService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loadDailyMatches();\r\n  }\r\n\r\n  loadDailyMatches() {\r\n    this.isLoading = true;\r\n    this.errorMessage = '';\r\n\r\n    this.profileService.getDailyMatches().subscribe({\r\n      next: (matches) => {\r\n        this.dailyMatches = matches;\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        this.errorMessage = 'Failed to load matches. Please try again.';\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  onLike(match: Match) {\r\n    this.profileService.likeUser(match.user.id).subscribe({\r\n      next: () => {\r\n        this.likedCount++;\r\n        this.dailyMatches = this.dailyMatches.filter(m => m.id !== match.id);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error liking user:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  onPass(match: Match) {\r\n    this.profileService.passUser(match.user.id).subscribe({\r\n      next: () => {\r\n        this.dailyMatches = this.dailyMatches.filter(m => m.id !== match.id);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error passing user:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  refreshMatches() {\r\n    this.loadDailyMatches();\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAkK1C,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAM7BC,YACUC,cAA8B,EAC9BC,WAAwB;IADxB,KAAAD,cAAc,GAAdA,cAAc;IACd,KAAAC,WAAW,GAAXA,WAAW;IAPrB,KAAAC,YAAY,GAAY,EAAE;IAC1B,KAAAC,SAAS,GAAG,KAAK;IACjB,KAAAC,YAAY,GAAG,EAAE;IACjB,KAAAC,UAAU,GAAG,CAAC;EAKX;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAA,gBAAgBA,CAAA;IACd,IAAI,CAACJ,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,YAAY,GAAG,EAAE;IAEtB,IAAI,CAACJ,cAAc,CAACQ,eAAe,EAAE,CAACC,SAAS,CAAC;MAC9CC,IAAI,EAAGC,OAAO,IAAI;QAChB,IAAI,CAACT,YAAY,GAAGS,OAAO;QAC3B,IAAI,CAACR,SAAS,GAAG,KAAK;MACxB,CAAC;MACDS,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACR,YAAY,GAAG,2CAA2C;QAC/D,IAAI,CAACD,SAAS,GAAG,KAAK;MACxB;KACD,CAAC;EACJ;EAEAU,MAAMA,CAACC,KAAY;IACjB,IAAI,CAACd,cAAc,CAACe,QAAQ,CAACD,KAAK,CAACE,IAAI,CAACC,EAAE,CAAC,CAACR,SAAS,CAAC;MACpDC,IAAI,EAAEA,CAAA,KAAK;QACT,IAAI,CAACL,UAAU,EAAE;QACjB,IAAI,CAACH,YAAY,GAAG,IAAI,CAACA,YAAY,CAACgB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACF,EAAE,KAAKH,KAAK,CAACG,EAAE,CAAC;MACtE,CAAC;MACDL,KAAK,EAAGA,KAAK,IAAI;QACfQ,OAAO,CAACR,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C;KACD,CAAC;EACJ;EAEAS,MAAMA,CAACP,KAAY;IACjB,IAAI,CAACd,cAAc,CAACsB,QAAQ,CAACR,KAAK,CAACE,IAAI,CAACC,EAAE,CAAC,CAACR,SAAS,CAAC;MACpDC,IAAI,EAAEA,CAAA,KAAK;QACT,IAAI,CAACR,YAAY,GAAG,IAAI,CAACA,YAAY,CAACgB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACF,EAAE,KAAKH,KAAK,CAACG,EAAE,CAAC;MACtE,CAAC;MACDL,KAAK,EAAGA,KAAK,IAAI;QACfQ,OAAO,CAACR,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;KACD,CAAC;EACJ;EAEAW,cAAcA,CAAA;IACZ,IAAI,CAAChB,gBAAgB,EAAE;EACzB;CACD;AAzDYT,kBAAkB,GAAA0B,UAAA,EA9J9B3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,gBAAgB;EAC1BC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4CT;EACDC,MAAM,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6GR;CACF,CAAC,C,EACW7B,kBAAkB,CAyD9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}