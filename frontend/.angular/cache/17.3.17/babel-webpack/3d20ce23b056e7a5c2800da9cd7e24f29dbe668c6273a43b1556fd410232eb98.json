{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.isLoading = false;\n    this.errorMessage = '';\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email, this.kuEmailValidator]],\n      password: ['', Validators.required]\n    });\n  }\n  kuEmailValidator(control) {\n    const email = control.value;\n    if (email && !email.endsWith('@ku.edu')) {\n      return {\n        kuEmail: true\n      };\n    }\n    return null;\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.isLoading = true;\n      this.errorMessage = '';\n      this.authService.login(this.loginForm.value).subscribe({\n        next: response => {\n          this.isLoading = false;\n          this.router.navigate(['/matches']);\n        },\n        error: error => {\n          this.isLoading = false;\n          this.errorMessage = error.error?.message || 'Login failed. Please try again.';\n        }\n      });\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  template: `\n    <div class=\"auth-container\">\n      <div class=\"auth-card\">\n        <div class=\"auth-header\">\n          <h1>❤️ JayMatch</h1>\n          <p class=\"subtitle\">Welcome back, Jayhawk!</p>\n        </div>\n\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"auth-form\">\n          <div class=\"form-group\">\n            <label for=\"email\">KU Email</label>\n            <input \n              type=\"email\" \n              id=\"email\"\n              formControlName=\"email\"\n              placeholder=\"yourname@ku.edu\"\n              [class.error]=\"loginForm.get('email')?.invalid && loginForm.get('email')?.touched\"\n            >\n            <div class=\"error-message\" *ngIf=\"loginForm.get('email')?.invalid && loginForm.get('email')?.touched\">\n              <span *ngIf=\"loginForm.get('email')?.errors?.['required']\">Email is required</span>\n              <span *ngIf=\"loginForm.get('email')?.errors?.['email']\">Please enter a valid email</span>\n              <span *ngIf=\"loginForm.get('email')?.errors?.['kuEmail']\">Must be a KU email (@ku.edu)</span>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input \n              type=\"password\" \n              id=\"password\"\n              formControlName=\"password\"\n              placeholder=\"Enter your password\"\n              [class.error]=\"loginForm.get('password')?.invalid && loginForm.get('password')?.touched\"\n            >\n            <div class=\"error-message\" *ngIf=\"loginForm.get('password')?.invalid && loginForm.get('password')?.touched\">\n              Password is required\n            </div>\n          </div>\n\n          <button \n            type=\"submit\" \n            class=\"btn btn-primary full-width\"\n            [disabled]=\"loginForm.invalid || isLoading\"\n          >\n            <span *ngIf=\"!isLoading\">Sign In</span>\n            <span *ngIf=\"isLoading\">Signing In...</span>\n          </button>\n        </form>\n\n        <div class=\"auth-footer\">\n          <p>Don't have an account? <a routerLink=\"/register\">Sign up</a></p>\n        </div>\n\n        <div class=\"error-alert\" *ngIf=\"errorMessage\">\n          {{ errorMessage }}\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .auth-container {\n      min-height: 100vh;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 2rem;\n    }\n\n    .auth-card {\n      background: white;\n      border-radius: 20px;\n      padding: 3rem;\n      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\n      width: 100%;\n      max-width: 400px;\n    }\n\n    .auth-header {\n      text-align: center;\n      margin-bottom: 2rem;\n    }\n\n    .auth-header h1 {\n      color: #667eea;\n      font-size: 2.5rem;\n      margin-bottom: 0.5rem;\n    }\n\n    .subtitle {\n      color: #6c757d;\n      font-size: 1.1rem;\n    }\n\n    .auth-form {\n      margin-bottom: 2rem;\n    }\n\n    .full-width {\n      width: 100%;\n      margin-top: 1rem;\n    }\n\n    .auth-footer {\n      text-align: center;\n      color: #6c757d;\n    }\n\n    .auth-footer a {\n      color: #667eea;\n      text-decoration: none;\n      font-weight: 500;\n    }\n\n    .auth-footer a:hover {\n      text-decoration: underline;\n    }\n\n    .error-message {\n      color: #dc3545;\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n    }\n\n    .error-alert {\n      background: #f8d7da;\n      color: #721c24;\n      padding: 1rem;\n      border-radius: 8px;\n      margin-top: 1rem;\n      border: 1px solid #f5c6cb;\n    }\n\n    input.error {\n      border-color: #dc3545;\n    }\n\n    @media (max-width: 480px) {\n      .auth-card {\n        padding: 2rem;\n        margin: 1rem;\n      }\n    }\n  `]\n})], LoginComponent);\nexport { LoginComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}