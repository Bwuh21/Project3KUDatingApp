{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProfileService {\n  constructor(http) {\n    this.http = http;\n    this.API_URL = 'http://localhost:8080';\n  }\n  getProfile() {\n    return this.http.get(`${this.API_URL}/profile`);\n  }\n  updateProfile(profile) {\n    return this.http.put(`${this.API_URL}/profile`, profile);\n  }\n  uploadProfileImage(image) {\n    const formData = new FormData();\n    formData.append('image', image);\n    return this.http.post(`${this.API_URL}/profile/image`, formData);\n  }\n  getDailyMatches() {\n    return this.http.get(`${this.API_URL}/matches/daily`);\n  }\n  likeUser(userId) {\n    return this.http.post(`${this.API_URL}/matches/like`, {\n      userId\n    });\n  }\n  passUser(userId) {\n    return this.http.post(`${this.API_URL}/matches/pass`, {\n      userId\n    });\n  }\n  getLikedUsers() {\n    return this.http.get(`${this.API_URL}/matches/liked`);\n  }\n  getMutualMatches() {\n    return this.http.get(`${this.API_URL}/matches/mutual`);\n  }\n  static {\n    this.ɵfac = function ProfileService_Factory(t) {\n      return new (t || ProfileService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProfileService,\n      factory: ProfileService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ProfileService","constructor","http","API_URL","getProfile","get","updateProfile","profile","put","uploadProfileImage","image","formData","FormData","append","post","getDailyMatches","likeUser","userId","passUser","getLikedUsers","getMutualMatches","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\super\\Project3KUDatingApp\\frontend\\src\\app\\services\\profile.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface Profile {\r\n  id: number;\r\n  userId: number;\r\n  name: string;\r\n  age: number;\r\n  major: string;\r\n  year: string;\r\n  bio: string;\r\n  interests: string[];\r\n  profileImage?: string;\r\n  location?: string;\r\n  lookingFor: string;\r\n  maxDistance: number;\r\n  ageRange: {\r\n    min: number;\r\n    max: number;\r\n  };\r\n}\r\n\r\nexport interface Match {\r\n  id: number;\r\n  user: Profile;\r\n  compatibility: number;\r\n  mutualInterests: string[];\r\n  distance: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileService {\r\n  private readonly API_URL = 'http://localhost:8080';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getProfile(): Observable<Profile> {\r\n    return this.http.get<Profile>(`${this.API_URL}/profile`);\r\n  }\r\n\r\n  updateProfile(profile: Partial<Profile>): Observable<Profile> {\r\n    return this.http.put<Profile>(`${this.API_URL}/profile`, profile);\r\n  }\r\n\r\n  uploadProfileImage(image: File): Observable<any> {\r\n    const formData = new FormData();\r\n    formData.append('image', image);\r\n    return this.http.post(`${this.API_URL}/profile/image`, formData);\r\n  }\r\n\r\n  getDailyMatches(): Observable<Match[]> {\r\n    return this.http.get<Match[]>(`${this.API_URL}/matches/daily`);\r\n  }\r\n\r\n  likeUser(userId: number): Observable<any> {\r\n    return this.http.post(`${this.API_URL}/matches/like`, { userId });\r\n  }\r\n\r\n  passUser(userId: number): Observable<any> {\r\n    return this.http.post(`${this.API_URL}/matches/pass`, { userId });\r\n  }\r\n\r\n  getLikedUsers(): Observable<Match[]> {\r\n    return this.http.get<Match[]>(`${this.API_URL}/matches/liked`);\r\n  }\r\n\r\n  getMutualMatches(): Observable<Match[]> {\r\n    return this.http.get<Match[]>(`${this.API_URL}/matches/mutual`);\r\n  }\r\n}\r\n"],"mappings":";;AAkCA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFP,KAAAC,OAAO,GAAG,uBAAuB;EAEX;EAEvCC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,OAAO,UAAU,CAAC;EAC1D;EAEAG,aAAaA,CAACC,OAAyB;IACrC,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAU,GAAG,IAAI,CAACL,OAAO,UAAU,EAAEI,OAAO,CAAC;EACnE;EAEAE,kBAAkBA,CAACC,KAAW;IAC5B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,KAAK,CAAC;IAC/B,OAAO,IAAI,CAACR,IAAI,CAACY,IAAI,CAAC,GAAG,IAAI,CAACX,OAAO,gBAAgB,EAAEQ,QAAQ,CAAC;EAClE;EAEAI,eAAeA,CAAA;IACb,OAAO,IAAI,CAACb,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,OAAO,gBAAgB,CAAC;EAChE;EAEAa,QAAQA,CAACC,MAAc;IACrB,OAAO,IAAI,CAACf,IAAI,CAACY,IAAI,CAAC,GAAG,IAAI,CAACX,OAAO,eAAe,EAAE;MAAEc;IAAM,CAAE,CAAC;EACnE;EAEAC,QAAQA,CAACD,MAAc;IACrB,OAAO,IAAI,CAACf,IAAI,CAACY,IAAI,CAAC,GAAG,IAAI,CAACX,OAAO,eAAe,EAAE;MAAEc;IAAM,CAAE,CAAC;EACnE;EAEAE,aAAaA,CAAA;IACX,OAAO,IAAI,CAACjB,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,OAAO,gBAAgB,CAAC;EAChE;EAEAiB,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAAClB,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,OAAO,iBAAiB,CAAC;EACjE;;;uBArCWH,cAAc,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdxB,cAAc;MAAAyB,OAAA,EAAdzB,cAAc,CAAA0B,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}