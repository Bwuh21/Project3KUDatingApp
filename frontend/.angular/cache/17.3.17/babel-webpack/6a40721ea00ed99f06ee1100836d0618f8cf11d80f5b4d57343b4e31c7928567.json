{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet MatchListComponent = class MatchListComponent {\n  constructor(profileService, authService) {\n    this.profileService = profileService;\n    this.authService = authService;\n    this.dailyMatches = [];\n    this.isLoading = false;\n    this.errorMessage = '';\n    this.likedCount = 0;\n  }\n  ngOnInit() {\n    this.loadDailyMatches();\n  }\n  loadDailyMatches() {\n    this.isLoading = true;\n    this.errorMessage = '';\n    this.profileService.getDailyMatches().subscribe({\n      next: matches => {\n        this.dailyMatches = matches;\n        this.isLoading = false;\n      },\n      error: error => {\n        this.errorMessage = 'Failed to load matches. Please try again.';\n        this.isLoading = false;\n      }\n    });\n  }\n  onLike(match) {\n    this.profileService.likeUser(match.user.id).subscribe({\n      next: () => {\n        this.likedCount++;\n        this.dailyMatches = this.dailyMatches.filter(m => m.id !== match.id);\n      },\n      error: error => {\n        console.error('Error liking user:', error);\n      }\n    });\n  }\n  onPass(match) {\n    this.profileService.passUser(match.user.id).subscribe({\n      next: () => {\n        this.dailyMatches = this.dailyMatches.filter(m => m.id !== match.id);\n      },\n      error: error => {\n        console.error('Error passing user:', error);\n      }\n    });\n  }\n  refreshMatches() {\n    this.loadDailyMatches();\n  }\n};\nMatchListComponent = __decorate([Component({\n  selector: 'app-match-list',\n  template: `\n    <div class=\"matches-container\">\n      <div class=\"matches-header\">\n        <h1>Your Daily 10</h1>\n        <p class=\"subtitle\">Today's personalized matches just for you</p>\n        <div class=\"match-stats\">\n          <span class=\"stat\">\n            <strong>{{ dailyMatches.length }}</strong> matches today\n          </span>\n          <span class=\"stat\">\n            <strong>{{ likedCount }}</strong> liked\n          </span>\n        </div>\n      </div>\n\n      <div class=\"matches-grid\" *ngIf=\"dailyMatches.length > 0\">\n        <app-match-card \n          *ngFor=\"let match of dailyMatches; let i = index\"\n          [match]=\"match\"\n          [index]=\"i\"\n          (like)=\"onLike($event)\"\n          (pass)=\"onPass($event)\"\n        ></app-match-card>\n      </div>\n\n      <div class=\"no-matches\" *ngIf=\"dailyMatches.length === 0 && !isLoading\">\n        <div class=\"no-matches-content\">\n          <h2>No matches today</h2>\n          <p>Check back tomorrow for new matches!</p>\n          <button class=\"btn btn-primary\" (click)=\"refreshMatches()\">\n            Refresh Matches\n          </button>\n        </div>\n      </div>\n\n      <div class=\"loading\" *ngIf=\"isLoading\">\n        <div class=\"loading-spinner\"></div>\n        <p>Finding your perfect matches...</p>\n      </div>\n\n      <div class=\"error-message\" *ngIf=\"errorMessage\">\n        {{ errorMessage }}\n      </div>\n    </div>\n  `,\n  styles: [`\n    .matches-container {\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 2rem;\n    }\n\n    .matches-header {\n      text-align: center;\n      margin-bottom: 3rem;\n    }\n\n    .matches-header h1 {\n      color: white;\n      font-size: 2.5rem;\n      margin-bottom: 0.5rem;\n    }\n\n    .subtitle {\n      color: rgba(255, 255, 255, 0.8);\n      font-size: 1.2rem;\n      margin-bottom: 1rem;\n    }\n\n    .match-stats {\n      display: flex;\n      justify-content: center;\n      gap: 2rem;\n      margin-top: 1rem;\n    }\n\n    .stat {\n      background: rgba(255, 255, 255, 0.1);\n      padding: 0.5rem 1rem;\n      border-radius: 20px;\n      color: white;\n      font-size: 0.9rem;\n    }\n\n    .matches-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n      gap: 2rem;\n      margin-bottom: 2rem;\n    }\n\n    .no-matches {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      min-height: 400px;\n    }\n\n    .no-matches-content {\n      text-align: center;\n      background: white;\n      padding: 3rem;\n      border-radius: 20px;\n      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n    }\n\n    .no-matches-content h2 {\n      color: #667eea;\n      margin-bottom: 1rem;\n    }\n\n    .loading {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      min-height: 400px;\n      color: white;\n    }\n\n    .loading-spinner {\n      width: 50px;\n      height: 50px;\n      border: 4px solid rgba(255, 255, 255, 0.3);\n      border-top: 4px solid white;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n      margin-bottom: 1rem;\n    }\n\n    @keyframes spin {\n      0% { transform: rotate(0deg); }\n      100% { transform: rotate(360deg); }\n    }\n\n    .error-message {\n      background: #f8d7da;\n      color: #721c24;\n      padding: 1rem;\n      border-radius: 8px;\n      margin-top: 1rem;\n      text-align: center;\n    }\n\n    @media (max-width: 768px) {\n      .matches-grid {\n        grid-template-columns: 1fr;\n      }\n      \n      .match-stats {\n        flex-direction: column;\n        gap: 1rem;\n      }\n    }\n  `]\n})], MatchListComponent);\nexport { MatchListComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}